[
    {
        "code": "CBT",
        "name": "Cursor Backward Tabulation",
        "parameters": {
            "Pn": "is the number of active position tabs to move backward."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "Z"
                ],
                [
                    "9B",
                    "3n",
                    "5A"
                ]
            ]
        ],
        "default": "1",
        "short": "Move the active position n tabs backward.",
        "description": "The active position is moved to the character position corresponding to the n-th\npreceding horizontal tabulation stop. If an attempt is made to move the active\nposition past the first character position on the line, then the active position stays\nat column one."
    },
    {
        "code": "CHA",
        "name": "Cursor Horizontal Absolute",
        "parameters": {
            "Pn": "is the number of active positions to the n-th character of the active line."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "G"
                ],
                [
                    "9B",
                    "3n",
                    "47"
                ]
            ]
        ],
        "default": "1",
        "short": "Move the active position to the n-th character of the active line.",
        "description": "The active position is moved to the n-th character position of the active line."
    },
    {
        "code": "CHT",
        "name": "Cursor Horizontal Forward Tabulation",
        "parameters": {
            "Pn": "is the number of active position tabs to move forward."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "I"
                ],
                [
                    "9B",
                    "3n",
                    "49"
                ]
            ]
        ],
        "default": "1",
        "short": "Move the active position n tabs forward.",
        "description": "The active position is moved to the character position corresponding to the\nfollowing n-th horizontal tabulation stop."
    },
    {
        "code": "CNL",
        "name": "Cursor Next Line",
        "parameters": {
            "Pn": "is the active position to the first character of the n-th following line."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "E"
                ],
                [
                    "9B",
                    "3n",
                    "45"
                ]
            ]
        ],
        "default": "1",
        "short": "Move the cursor to the next line.",
        "description": "The active position is moved to the first character of the n-th following line."
    },
    {
        "code": "CPL",
        "name": "Cursor Previous Line",
        "parameters": {
            "Pn": "is the number of active position moved to the first character of the n-th preceding\nline."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "F"
                ],
                [
                    "9B",
                    "3n",
                    "46"
                ]
            ]
        ],
        "default": "1",
        "short": "Move the cursor to the preceding line.",
        "description": "The active position is moved to the first character of the n-th preceding line."
    },
    {
        "code": "CPR",
        "name": "Cursor Position Report",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "6",
                    "n"
                ],
                [
                    "9B",
                    "36",
                    "6E"
                ]
            ],
            [
                [
                    "CSI",
                    "Pl",
                    ";",
                    "Pc",
                    "R"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "52"
                ]
            ]
        ],
        "default": null,
        "short": "The host asks the terminal for a cursor position report.",
        "description": ""
    },
    {
        "code": "CRM",
        "name": "Show Control Character Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "3",
                    "h"
                ],
                [
                    "9B",
                    "33",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "3",
                    "l"
                ],
                [
                    "9B",
                    "33",
                    "6C"
                ]
            ]
        ],
        "default": "Interpret",
        "short": "Enable or disable control characters to be displayed.",
        "description": "When CRM mode is set, all characters (graphic or control) are displayed in the\nCRM font. All control functions are displayed as graphic characters. No control\nfunctions are executed, except LF, FF, and VT, which are represented in the CRM\nfont before a CRLF (new line) is executed. XOFF (DC3) and XON (DC1) are used\nfor flow control (if enabled). DC1 and DC3 are displayed after execution.\n\nThis function affects data received in the data stream following the change to\nCRM mode. Characters already displayed are not affected. Entering Control\nRepresentation mode temporarily causes G0 and GL to be loaded with ASCII. G2\nand GR are loaded with user-selected Supplemental Graphic characters if in 8-bit\nMultinational Character mode.\n\nNotes on CRM\n\n\nCRM mode works in all VT terminal modes.\nNUL is displayed and is not useful as a fill character.\nCRM mode overrides Printer Controller mode. When in CRM, Printer\nController mode is temporarily off.\nIn local mode and CRM (or local echo and CRM), CSI sequences may be\nrepresented as either ESC Fe sequences (such as ESC [) or as C1 controls.\nConversely, C1 controls may be represented as either C1 controls or as ESC\nFe sequences.\nIn CRM mode, auto-wrap always occurs at the right margin. Sending a\nsequence or disabling auto-wrap in Set-Up is ignored.\nTerminal Device Protocol commands are not affected if Control Representation\nmode is entered.\n"
    },
    {
        "code": "CUB",
        "name": "Cursor Backward",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "D"
                ],
                [
                    "9B",
                    "3n",
                    "44"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the cursor to the left by a specified number of\ncolumns. The cursor stops at the left border of the page.",
        "description": ""
    },
    {
        "code": "CUD",
        "name": "Cursor Down",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "B"
                ],
                [
                    "9B",
                    "3n",
                    "42"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the cursor down a specified number of lines in the\nsame column. The cursor stops at the bottom margin. If the cursor is already\nbelow the bottom margin, then the cursor stops at the bottom line.",
        "description": ""
    },
    {
        "code": "CUF",
        "name": "Cursor Forward",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "C"
                ],
                [
                    "9B",
                    "3n",
                    "43"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the cursor to the right by a specified number of\ncolumns. The cursor stops at the right border of the page.",
        "description": ""
    },
    {
        "code": "CUP",
        "name": "Cursor Position",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pl",
                    ";",
                    "Pc",
                    "H"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "48"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the cursor to the specified line and column. The\nstarting point for lines and columns depends on the setting of origin mode\n(DECOM). CUP applies only to the current page.",
        "description": ""
    },
    {
        "code": "CUU",
        "name": "Cursor Up",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "A"
                ],
                [
                    "9B",
                    "3n",
                    "41"
                ]
            ]
        ],
        "default": null,
        "short": "Moves the cursor up a specified number of lines in the same column. The cursor\nstops at the top margin. If the cursor is already above the top margin, then the\ncursor stops at the top line.",
        "description": ""
    },
    {
        "code": "DA1",
        "name": "Primary Device Attributes",
        "parameters": {
            "1": "",
            "The terminal responds by sending its architectural class and basic attributes to": "the host. This response depends on the terminal's current operating VT level.",
            "The value of the first parameter is encoded so a simple range check can be": "performed to determine the basic service class and level of the device. The VT510\nis a level 4 terminal so its service class code is 64. The following extensions to\nlevel 4 are provided:",
            "Ps1 ; . . . Psn": "reports different device attributes between the North American terminal and the\ninternational terminal."
        },
        "format": [
            [
                [
                    "CSI",
                    "c"
                ],
                [
                    "9B",
                    "63"
                ]
            ],
            [
                [
                    "CSI",
                    "0",
                    "c",
                    "CSI",
                    "?",
                    "6",
                    "4",
                    ";",
                    "Ps1",
                    ";",
                    "...",
                    "Psn",
                    "c",
                    "CSI",
                    "?",
                    "6",
                    "4",
                    ";",
                    "Ps1",
                    ";",
                    "...",
                    "Psn",
                    "c"
                ],
                [
                    "9B",
                    "30",
                    "63",
                    "9B",
                    "3F",
                    "36",
                    "34",
                    "3B",
                    "3n",
                    "3B",
                    "...",
                    "3n",
                    "63",
                    "9B",
                    "3F",
                    "36",
                    "34",
                    "3B",
                    "3n",
                    "3B",
                    "...",
                    "3n",
                    "63"
                ]
            ]
        ],
        "default": null,
        "short": "In this DA exchange, the host asks for the terminal's architectural class and basic\nattributes.",
        "description": ""
    },
    {
        "code": "DA2",
        "name": "Secondary Device Attributes",
        "parameters": {
            "0": "The terminal with a VT keyboard uses the following sequence to respond:",
            "61": "indicates the identification code of the terminal for the secondary device attributes\ncommand.",
            "Pv": "indicates the version level of the firmware implementing the terminal\nmanagement functions, for example, editing, as shown in the following table."
        },
        "format": [
            [
                [
                    "CSI",
                    "&gt;",
                    "c"
                ],
                [
                    "9B",
                    "3E",
                    "63"
                ]
            ],
            [
                [
                    "CSI",
                    "&gt;",
                    "0",
                    "c",
                    "CSI",
                    "&gt;",
                    "6",
                    "1",
                    ";",
                    "Pv",
                    ";",
                    "0",
                    "c"
                ],
                [
                    "9B",
                    "3E",
                    "30",
                    "63",
                    "9B",
                    "3E",
                    "36",
                    "31",
                    "3B",
                    "3n",
                    "3B",
                    "30",
                    "63"
                ]
            ],
            [
                [
                    "CSI",
                    "&gt;",
                    "6",
                    "1",
                    ";",
                    "Pv",
                    ";",
                    "1",
                    "c"
                ],
                [
                    "9B",
                    "3E",
                    "36",
                    "31",
                    "3B",
                    "3n",
                    "3B",
                    "31",
                    "63"
                ]
            ]
        ],
        "default": null,
        "short": "In this DA exchange, the host requests the terminal's identification code,\nfirmware version level, and hardware options.",
        "description": ""
    },
    {
        "code": "DA3",
        "name": "Tertiary Device Attributes",
        "parameters": {
            "D...D": "is the unit ID of the terminal, consisting of four hexadecimal pairs. The first pair\nrepresents the manufacturing site code. This code can be any hexadecimal value\nfrom 00 through FF.",
            "The last three hexadecimal pairs are the terminal ID number. This number is": "unique for each terminal manufactured at that site.",
            "The terminal responds by sending a report terminal unit ID (DECRPTUI) control": "string to the host. DECRPTUI is available in VT Level 4 mode only."
        },
        "format": [
            [
                [
                    "CSI",
                    "=",
                    "c"
                ],
                [
                    "9B",
                    "3D",
                    "63"
                ]
            ],
            [
                [
                    "CSI",
                    "=",
                    "0",
                    "c",
                    "DCS",
                    "!",
                    "|",
                    "D . . . D",
                    "ST"
                ],
                [
                    "9B",
                    "3D",
                    "30",
                    "63",
                    "90",
                    "21",
                    "7C",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "In this DA exchange, the host asks for the terminal unit identification code. This\nID code serves as a way to identify each terminal in a system. The unit ID code\nis preset at the factory.",
        "description": ""
    },
    {
        "code": "DCH",
        "name": "Delete Character",
        "parameters": {
            "0": "Default: Pn = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "P"
                ],
                [
                    "9B",
                    "3n",
                    "50"
                ]
            ]
        ],
        "default": null,
        "short": "This control function deletes one or more characters from the cursor position to\nthe right.",
        "description": "As characters are deleted, the remaining characters between the cursor and\nright margin move to the left. Character attributes move with the characters.\nThe terminal adds blank spaces with no visual character attributes at the right\nmargin. DCH has no effect outside the scrolling margins."
    },
    {
        "code": "DDD1, DDD2, DDD3",
        "name": null,
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    ")",
                    "1"
                ],
                [
                    "1B",
                    "29",
                    "31"
                ]
            ],
            [
                [
                    "ESC",
                    ")",
                    "B"
                ],
                [
                    "1B",
                    "29",
                    "42"
                ]
            ],
            [
                [
                    "ESC",
                    "(",
                    "1"
                ],
                [
                    "1B",
                    "28",
                    "31"
                ]
            ]
        ],
        "default": null,
        "short": "DDD1, DDD2, and DDD3 are responses to the host for a Request Terminal State\nReport (DECRQTSR) control function. These responses only work for a Hebrew\nkeyboard.",
        "description": "These escape sequences have the following effects:\n\n\n\n\n\n\nEscape Sequence\nMeaning\n\n\n\n\nDDD1\nDECRLM is set.\nDECHEBM is set.\nDECHEM is set\n\n\nDDD2\nDECRLM is reset.\nASCII is designated in G1.\n\n\nDDD3\nASCII is designated in G0.\n\n\n"
    },
    {
        "code": "DECAAM",
        "name": "Set/Reset Auto Answerback Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "0",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "30",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "0",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "30",
                    "6C"
                ]
            ]
        ],
        "default": "Auto answerback disabled",
        "short": "Selects whether the terminal automatically sends (enables) or does not send\n(disables) the answerback message to the host computer after a communication\nline connection.",
        "description": "When modem control is enabled, the answerback message is sent 500 ms after\nthe connection is made."
    },
    {
        "code": "DECALN",
        "name": "Screen Alignment Pattern",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "#",
                    "8"
                ],
                [
                    "1B",
                    "23",
                    "38"
                ]
            ]
        ],
        "default": null,
        "short": "This control function fills the complete screen area with a test pattern used for\nadjusting screen alignment. Normally, only manufacturing and service personnel\nwould use DECALN.",
        "description": ""
    },
    {
        "code": "DECANM",
        "name": "ANSI Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "2",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "32",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "DECANM changes the terminal to the VT52 mode of operation. In VT52 mode,\nthe terminal acts like a VT52 terminal. This mode lets you use applications\ndesigned for the VT52 terminal.",
        "description": "\nTable 5&#8211;1 VT52 Escape Sequences\n\n\n\n\nSequence\nAction\n\n\n\n\nESC A\nCursor up.\n\n\nESC B\nCursor down.\n\n\nESC C\nCursor right.\n\n\nESC D\nCursor left.\n\n\nESC F\nEnter graphics mode.\n\n\nESC G\nExit graphics mode.\n\n\nESC H\nCursor to home position.\n\n\nESC I\nReverse line feed.\n\n\nESC J\nErase from cursor to end of screen.\n\n\nESC K\nErase from cursor to end of line.\n\n\nESC Y Pn\nMove cursor to column Pn.\n\n\nESC Z\nIdentify (host to terminal).\n\n\nESC /Z\nReport (terminal to host).\n\n\nESC =\nEnter alternate keypad mode.\n\n\nESC &gt;\nExit alternate keypad mode.\n\n\nESC &lt;\nExit VT52 mode. Enter VT100 mode.\n\n\nESC ^\nEnter autoprint mode.\n\n\nESC _\nExit autoprint mode.\n\n\nESC W\nEnter printer controller mode.\n\n\nESC X\nExit printer controller mode.\n\n\nESC ]\nPrint screen.\n\n\nESC V\nPrint the line with the cursor.\n\n\n"
    },
    {
        "code": "DECARM",
        "name": "Autorepeat Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "8",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "38",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "8",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "38",
                    "6C"
                ]
            ]
        ],
        "default": "Repeat (set)",
        "short": "This control function determines whether or not keys automatically repeat their\ncharacter when held down. If DECARM is set, then most keys you press for more\nthan 0.5 seconds send a character repeatedly until you release the key.",
        "description": ""
    },
    {
        "code": "DECARSM",
        "name": "Set/Reset Auto Resize Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "8",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "38",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "8",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "38",
                    "6C"
                ]
            ]
        ],
        "default": "Auto resize disabled",
        "short": "Enable or disable changing the lines per screen automatically when the page\narrangement changes.",
        "description": "When Auto Resize is enabled, the number of Lines/Screen changes automatically\neach time the page arrangement changes.\n\nAuto Resize and Number of lines per screen are user features that can be\nlocked from being redefined by the host if the User Feature Lock in Set-Up is\nenabled.\n\nThe following table indicates how the lines/screen changes when the page size\nchanges, assuming Auto Resize is set.\n\n\n\n\n\n\nPage size\nLines/Screen\n\n\n\n\n24\n26 (24 data lines, 1 status line, 1 blank line)\n\n\n25\n26 (25 data lines, 1 status line)\n\n\n36\n42 (36 data lines, 1 status line, 5 blank lines)\n\n\n41\n42 (41 data lines, 1 status line)\n\n\n42\n42 (42 data lines, no status line)\n\n\n48\n53 (48 data lines, 1 status line, 4 blank lines)\n\n\n52\n53 (52 data lines, 1 status line)\n\n\n53\n53 (53 data lines, 0 status line)\n\n\n72\n53 (53 data lines, 0 status line)\n\n\n"
    },
    {
        "code": "DECAUPSS",
        "name": "Assigning User-Preferred Supplemental Sets",
        "parameters": {
            "You can assign any supplemental or ISO Latin supplemental set as the standby": "set. See SCS&#8212;Select Character Set for more information.",
            "Pn": "represents a character set designator.",
            "Dscs": "represents a character set."
        },
        "format": [
            [
                [
                    "DCS",
                    "Pn",
                    "!",
                    "u",
                    "Dscs",
                    "ST"
                ],
                [
                    "90",
                    "3n",
                    "21",
                    "75",
                    "3n",
                    "9C"
                ]
            ]
        ],
        "default": "DEC Supplemental Graphic",
        "short": "You can assign the supplemental character set you use most often as a special\nstandby set. This standby set is called the user-preferred supplemental set. This\nfeature provides applications with an easy way to access the user's preferred\nsupplemental set.",
        "description": "You can assign any supplemental or ISO Latin supplemental set as the standby\nset. See SCS&#8212;Select Character Set for more information.\n\nAfter you assign a set:\n\n\nDesignate the set as G1, G2, or G3.\nMap the set into GR.\n"
    },
    {
        "code": "DECAWM",
        "name": "Autowrap Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "7",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "37",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "7",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "37",
                    "6C"
                ]
            ]
        ],
        "default": "No autowrap",
        "short": "This control function determines whether or not received characters automatically\nwrap to the next line when the cursor reaches the right border of a page in page\nmemory.",
        "description": "If the DECAWM function is set, then graphic characters received when the cursor\nis at the right border of the page appear at the beginning of the next line. Any\ntext on the page scrolls up if the cursor is at the end of the scrolling region.\n\nIf the DECAWM function is reset, then graphic characters received when the\ncursor is at the right border of the page replace characters already on the page."
    },
    {
        "code": "DECBI",
        "name": "Back Index",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "6"
                ],
                [
                    "1B",
                    "36"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the cursor backward one column. If the cursor is at\nthe left margin, then all screen data within the margin moves one column to the\nright. The column that shifted past the right margin is lost.",
        "description": "DECBI adds a new column at the left margin with no visual attributes. DECBI\nis not affected by the margins. If the cursor is at the left border of the page when\nthe terminal receives DECBI, then the terminal ignores DECBI."
    },
    {
        "code": "DECBKM",
        "name": "Backarrow Key Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "7",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "37",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "7",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "37",
                    "6C"
                ]
            ]
        ],
        "default": "Delete key",
        "short": "This control function determines whether the ",
        "description": "If DECBKM is set,  works as a backspace key. When you press , the\nterminal sends a BS character to the host.\n\nIf DECBKM is reset,  works as a delete key. When you press , the terminal\nsends a DEL character to the host."
    },
    {
        "code": "DECCANSM",
        "name": "Conceal Answerback Message Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "1",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "31",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "1",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "31",
                    "6C"
                ]
            ]
        ],
        "default": "Answerback message is not concealed",
        "short": "Conceal the answerback message.",
        "description": "\n\n\n\n\nSetting\nFunction\n\n\n\n\nNot concealed\nThe answerback message is visible in Set-Up.\n\n\nConcealed\nThe text \"concealed\" replaces the answerback\nmessage.\nThe answerback message cannot be set back to\n\"not concealed\" either through a host control\nfunction or Set-Up. Only entering a new\nmessage returns this field to \"not concealed.\"\nIf the user or host requests the terminal\nto reset to the default setting (answerback\nmessage not concealed (CSI ? 101 l)) when the\nanswerback message is set to \"concealed,\" then\nthe terminal will not reset the answerback\nmessage to \"not concealed.\"\n\n\n"
    },
    {
        "code": "DECCAPSLK",
        "name": "Caps Lock Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "9",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "39",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "9",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "39",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "DECCAPSLK controls the state of the ",
        "description": ""
    },
    {
        "code": "DECCARA",
        "name": "Change Attributes in Rectangular Area",
        "parameters": {
            "Pr": "is the right-column border.\nDefault: Pr = last column of the active page.",
            "Pt": "is the top-line border. Pt must be less than or equal to Pb.\nDefault: Pt = 1.",
            "8": "CSI ; ; ; ; 0; 4; 5 $ r",
            "DECCARA ignores all other parameter values. When you use more than one": "parameter in a command, DECCARA executes them cumulatively in sequence.",
            "The following sequence changes the video attributes of the complete screen to": "blink and underscore:",
            "Pb": "is the bottom-line border.\nDefault: Pb = last line of the active page.",
            "The following sequence turns off the blinking character attribute from position": "line 10, column 2 to position line 14, column 45 on the current page:",
            "Pt; Pl; Pb; Pr;": "define the rectangular area to be changed. A semicolon (3/11) separates\nparameters.",
            "Ps1; . . . Psn": "select the visual character attributes to change. These values correspond to the\nvalues used in the select graphic rendition.",
            "Pl": "is the left-column border. Pl must be less than or equal to Pr.\nDefault: Pl = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pt; Pl; Pb; Pr;",
                    "Ps1; . . . Psn",
                    "$",
                    "r"
                ],
                [
                    "9B",
                    "area to be changed",
                    "attributes to change",
                    "24",
                    "72"
                ]
            ]
        ],
        "default": null,
        "short": "This control function lets you change the visual character attributes (bold, blink,\nreverse video, and underline) of a specified rectangular area in page memory. The\nselect attribute change extent (DECSACE) control function determines whether\nall or some of the character positions in the rectangle are affected. DECCARA\ndoes not change the values of characters just the visual attributes of those\ncharacters.",
        "description": ""
    },
    {
        "code": "DECCIR",
        "name": "Cursor Information Report (Terminal to Host)",
        "parameters": {
            "Pr": "is the number of the line the cursor is on.",
            "1": "Pr; Pc; Pp; Srend; Satt; Sflag; Pgl; Pgr; Scss; Sdesig",
            "Pp": "is the number of the current page.",
            "Satt": "is one or more characters indicating any selective erase attributes currently set\nfor writing.",
            "Srend": "is one or more characters indicating the visual attributes, such as bold or\nblinking, currently in use for writing. To find out what attributes are set, you\nmust convert the character to an 8-bit binary number. The bits are used as\nfollows.",
            "15": "Example",
            "To find out what the character means, you must convert it to an 8-bit binary": "number. Use the following table to find the meaning of the 8-bit binary number:",
            "18": "DCS 1 $ u 1; 1; 1; @; @; @; 0; 2; @; BB%5%5 ST",
            "19": "1; 1; 1; indicates that the cursor is at row 1, column 1, on the first page.",
            "17": "The following is an example of a cursor information report:",
            "22": "@; indicates that all character sets have 94 characters.",
            "@; @; @; indicates that (1) no visual character attributes or selective erase": "attributes are set for writing, (2) DECOM is reset, and (3) there is no SS2, SS3,\nor autowrap pending.",
            "To see the current state of the flags and modes, you must convert each character": "to an 8-bit binary number. Use the following table to find the meaning of the\n8-bit binary number:",
            "Pgr": "indicates the number of the logical character set (G0 through G3) mapped into\nGR.",
            "Scss": "is a character indicating the size of the character sets in G0 through G3.",
            "To find what attributes are set, you must convert each character to an 8-bit": "binary number. Use the following table to find the meaning of the 8-bit binary\nnumber:",
            "D...D": "is the data string containing the cursor information. The format for this data\nstring is as follows:",
            "Suppose the ASCII character set is designated as G0, DEC Special Graphic as": "G1, and DEC Supplemental Graphic as G2 and G3. The Sdesig string would be\nB0%5%5. Each character corresponds to a final character in an SCS sequence, as\nfollows:",
            "Pc": "is the number of the column the cursor is at.",
            "Pgl": "indicates the number of the logical character set (G0 through G3) mapped into\nGL.",
            "Sdesig": "is a string of intermediate and final characters indicating the character sets\ndesignated as G0 through G3. These final characters are the same as those used\nin select character set (SCS) sequences.",
            "Sflag": "is one or more characters that indicate several flags and modes the terminal must\nsave.",
            "21": "0; 2; indicates that G0 is mapped into GL, and G2 is in GR."
        },
        "format": [
            [
                [
                    "DCS",
                    "1",
                    "$",
                    "u",
                    "D ... D",
                    "ST"
                ],
                [
                    "90",
                    "31",
                    "24",
                    "75",
                    "D ... D",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "The terminal sends this sequence in response to a request presentation state\nreport (DECRQPSR) sequence, ",
        "description": "DECCIR reports all the character sets if they are assigned to one of the G0,\nG1, G2, or G3 sets. Refer to SCS&#8212;Select Character Set for all character set\ndesignators.\n\nParameters\n\nD...D\nis the data string containing the cursor information. The format for this data\nstring is as follows:\n\nPr; Pc; Pp; Srend; Satt; Sflag; Pgl; Pgr; Scss; Sdesig\n\nPr\nis the number of the line the cursor is on.\n\nPc\nis the number of the column the cursor is at.\n\nPp\nis the number of the current page.\n\nSrend\nis one or more characters indicating the visual attributes, such as bold or\nblinking, currently in use for writing. To find out what attributes are set, you\nmust convert the character to an 8-bit binary number. The bits are used as\nfollows.\n\n\n\n\n\n\n\n\n\nBit\nAttribute\nBit Value\n\n\n\n\n8\n&#8211;\nAlways 0 (off).\n\n\n7\n&#8211;\nAlways 1 (on).\n\n\n6\nExtension\nindicator\n1\n=\nanother character (byte) of visual\nattribute data follows this one.\n\n\n0\n=\nno more attribute data.\n\n\n5\n&#8211;\nAlways 0 (off).\n\n\n4\nReverse video\n0\n=\noff.\n\n\n1\n=\non.\n\n\n3\nBlinking\n0\n=\noff.\n\n\n1\n=\non.\n\n\n2\nUnderline\n0\n=\noff.\n\n\n1\n=\non.\n\n\n1\nBold\n0\n=\noff.\n\n\n1\n=\non.\n\n\nExample\nIf the bold and underline attributes are currently set for writing, Srend is the\nASCII uppercase C character (010000112).\n\n\n\n\nSatt\nis one or more characters indicating any selective erase attributes currently set\nfor writing.\n\nTo find what attributes are set, you must convert each character to an 8-bit\nbinary number. Use the following table to find the meaning of the 8-bit binary\nnumber:\n\n\n\n\n\n\n\n\n\nBit\nAttribute\nBit Value\n\n\n\n\n8\n&#8211;\nAlways 0 (off).\n\n\n7\n&#8211;\nAlways 1 (on).\n\n\n6\nExtension\nindicator\n1\n=\nanother character (byte) of selective erase\ndata follows this one.\n\n\n0\n=\nno more protection data.\n\n\n5\n&#8211;\n0\n\nReserved for future use.\n\n\n4\n&#8211;\n0\n\nReserved for future use.\n\n\n3\n&#8211;\n0\n\nReserved for future use.\n\n\n2\n&#8211;\n0\n\nReserved for future use.\n\n\n1\nSelective erase\n(DECSCA)\n0\n=\noff.\n\n\n1\n=\non.\n\n\nExample\nIf the selective erase protection attribute is currently set for writing, then Satt is\nthe ASCII uppercase A character (010000012).\n\n\n\n\nSflag\nis one or more characters that indicate several flags and modes the terminal must\nsave.\n\nTo see the current state of the flags and modes, you must convert each character\nto an 8-bit binary number. Use the following table to find the meaning of the\n8-bit binary number:\n\n\n\n\n\n\n\n\n\nBit\nAttribute\nBit Value\n\n\n\n\n8\n&#8211;\nAlways 0 (off).\n\n\n7\n&#8211;\nAlways 1 (on).\n\n\n6\nExtension\nindicator\n1\n=\nanother character (byte) of flag data follows\nthis one.\n\n\n0\n=\nno more flag data.\n\n\n5\n&#8211;\n0\n\nReserved for future use.\n\n\n4\nAutowrap\n1\n=\nautowrap pending.\n\n\n0\n=\nautowrap not pending.\n\n\n3\nSingle shift 3\n(SS3) setting\n1\n=\nG3 is mapped into GL for the next typed\ncharacter only.\n\n\n0\n=\nsingle shift 3 is off.\n\n\n2\nSingle shift 2\n(SS2) setting\n1\n=\nG2 is mapped into GL for the next typed\ncharacter only.\n\n\n0\n=\nsingle shift 2 is off.\n\n\n1\nOrigin mode\n1\n=\norigin mode set.\n\n\n0\n=\norigin mode reset.\n\n\nExample\nIf origin mode is set, autowrap is pending, and a single shift 3 has been received,\nthen Sflag is the ASCII uppercase M character (010011012).\n\n\n\n\nPgl\nindicates the number of the logical character set (G0 through G3) mapped into\nGL.\n\n\n\n\n0 = G0 is in GL.\n2 = G2 is in GL.\n\n\n1 = G1 is in GL.\n3 = G3 is in GL.\n\n\n\n\nPgr\nindicates the number of the logical character set (G0 through G3) mapped into\nGR.\n\n\n\n\n0 = G0 is in GR.\n2 = G2 is in GR.\n\n\n1 = G1 is in GR.\n3 = G3 is in GR.\n\n\n\n\nScss\nis a character indicating the size of the character sets in G0 through G3.\n\nTo find out what the character means, you must convert it to an 8-bit binary\nnumber. Use the following table to find the meaning of the 8-bit binary number:\n\n\n\n\n\n\n\n\n\nBit\nAttribute\nBit Value\n\n\n\n\n8\n&#8211;\nAlways 0 (off).\n\n\n7\n&#8211;\nAlways 1 (on).\n\n\n6\nExtension\nindicator\n1\n=\nanother character (byte) of character size\ndata follows this one.\n\n\n0\n=\nno more size data.\n\n\n5\n&#8211;\n0\n\nReserved for future use.\n\n\n4\nG3 set size\n0\n=\n94 characters.\n\n\n1\n=\n96 characters.\n\n\n3\nG2 set size\n0\n=\n94 characters.\n\n\n1\n=\n96 characters.\n\n\n2\nG1 set size\n0\n=\n94 characters.\n\n\n1\n=\n96 characters.\n\n\n1\nG0 set size\n0\n=\n94 characters.\n\n\n1\n=\n96 characters.\n\n\nExample\nSuppose the following conditions exist:\n\nThe ISO Latin-1 supplemental set is designated as G2 and G3.\nThe ASCII set is designated as G0 and G1.\nSingle shift 2 (SS2) is set.\n\nThen Scss is the ASCII backslash \\ character (010111002).\n\n\n\n\nSdesig\nis a string of intermediate and final characters indicating the character sets\ndesignated as G0 through G3. These final characters are the same as those used\nin select character set (SCS) sequences.\n\nExample\n\nSuppose the ASCII character set is designated as G0, DEC Special Graphic as\nG1, and DEC Supplemental Graphic as G2 and G3. The Sdesig string would be\nB0%5%5. Each character corresponds to a final character in an SCS sequence, as\nfollows:\n\n\n\n\nG0\nG1\nG2\nG3\n\n\nB\n0\n%5\n%5\n\n\nASCII set\nDEC Special Graphic\nDEC Supplemental Graphic\nDEC Supplemental Graphic\n\n\n\n\nExample\n\nThe following is an example of a cursor information report:\n\nDCS 1 $ u 1; 1; 1; @; @; @; 0; 2; @; BB%5%5 ST\n\n1; 1; 1; indicates that the cursor is at row 1, column 1, on the first page.\n\n@; @; @; indicates that (1) no visual character attributes or selective erase\nattributes are set for writing, (2) DECOM is reset, and (3) there is no SS2, SS3,\nor autowrap pending.\n\n0; 2; indicates that G0 is mapped into GL, and G2 is in GR.\n\n@; indicates that all character sets have 94 characters.\n\nBB%5%5 indicates that ASCII is in G0 and G1, and DEC Supplemental Graphic\nis in G2 and G3.\n\nNotes on DECCIR\n\n\nThe cursor information in a DECCIR sequence is the same information saved\nthrough a save cursor (DECSC) command.\n"
    },
    {
        "code": "DECCKD",
        "name": "Copy Key Default",
        "parameters": {
            "A function key can copy the default state from a function key or a graphic key.": "When a graphic key's default is copied, the function key operates as a graphic\nkey. Only the modifiers that are suitable for a graphic key operate with the key.\nThis logic is used when a graphic key copies the default from a function key.",
            "The source key and the destination key can be two different keys or the same key.": "If they are different keys, then the copy operation occupies the memory space\nthat is reserved for the operations of control functions, DECPFK, DECPAK, and\nDECUDK and their equivalent functions in Set-Up. (Refer to DECPFK&#8212;Program\nFunction Key for details.) If they are the same key, then the function of the\ncopy operation is to restore the key's default. In this state, the terminal does\nnot allocate new memory space. The terminal frees up the space by deleting the\nnon-default functions of the destination key and its modifier combinations.",
            "3": "The data string D...D format is:",
            "4": "Key-s/Key-d;Key-s/Key-d........;",
            "5": "Where:",
            "2": "Multiple keys can be copied in one sequence.",
            "Once programmed, the key states are not affected by the terminal mode changes.": "Refer to DECPFK&#8212;Program Function Key for the list of terminal mode changes."
        },
        "format": [
            [
                [
                    "DCS",
                    "\"",
                    "z",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "22",
                    "7A",
                    "D . . . D",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "Copies the default states of a key and its key/modifier combination to another key\nand its key/modifier combination.",
        "description": "This control function copies the default states of a key and all its modifier\ncombinations to another key and its modifier combinations. The source key may\nhave been reprogrammed to perform a non-default function when copy operation\nis executed. Only the default states of the source key are copied.\n\nThe source key and the destination key can be two different keys or the same key.\nIf they are different keys, then the copy operation occupies the memory space\nthat is reserved for the operations of control functions, DECPFK, DECPAK, and\nDECUDK and their equivalent functions in Set-Up. (Refer to DECPFK&#8212;Program\nFunction Key for details.) If they are the same key, then the function of the\ncopy operation is to restore the key's default. In this state, the terminal does\nnot allocate new memory space. The terminal frees up the space by deleting the\nnon-default functions of the destination key and its modifier combinations.\n\nA function key can copy the default state from a function key or a graphic key.\nWhen a graphic key's default is copied, the function key operates as a graphic\nkey. Only the modifiers that are suitable for a graphic key operate with the key.\nThis logic is used when a graphic key copies the default from a function key.\n\nMultiple keys can be copied in one sequence.\n\nThe data string D...D format is:\n\nKey-s/Key-d;Key-s/Key-d........;\n\nWhere:\n\n\nKey-s is the keystation number of the key to be copied.\nKey-d is the keystation number of the destination key.\n\n\nOnce programmed, the key states are not affected by the terminal mode changes.\nRefer to DECPFK&#8212;Program Function Key for the list of terminal mode changes.\n\nThis function works in all the VT modes except in VT52 mode."
    },
    {
        "code": "DECCKM",
        "name": "Cursor Keys Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "6C"
                ]
            ]
        ],
        "default": "Cursor",
        "short": "This control function selects the sequences the arrow keys send. You can use the\nfour arrow keys to move the cursor through the current page or to send special\napplication commands.",
        "description": "If the DECCKM function is set, then the arrow keys send application sequences\nto the host.\n\nIf the DECCKM function is reset, then the arrow keys send ANSI cursor\nsequences to the host."
    },
    {
        "code": "DECCKSR",
        "name": "Memory Checksum Report",
        "parameters": {
            "Pid (response)": "is a label indicating which DSR request the report is for.",
            "Pid (request)": "is an optional numeric parameter that provides a label to identify the particular\nchecksum request. The checksum report returns the label. This label lets you\ndistinguish between multiple checksum reports."
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "3",
                    ";",
                    "Pid",
                    "n"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "33",
                    "3B",
                    "3n",
                    "6E"
                ]
            ],
            [
                [
                    "DCS",
                    "Pid",
                    "!",
                    "~",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "3n",
                    "21",
                    "7E",
                    ". . .",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "The host asks for a memory checksum report of current text macro definitions.",
        "description": ""
    },
    {
        "code": "DECCOLM",
        "name": "Select 80 or 132 Columns per Page",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "6C"
                ]
            ]
        ],
        "default": "80 columns",
        "short": "There are two control functions that can set the page width to 80 or 132 columns,\nDECSCPP (DECSCPP\u2014Select 80 or 132 Columns per Page) and DECCOLM.",
        "description": ""
    },
    {
        "code": "DECCRA",
        "name": "Copy Rectangular Area",
        "parameters": {
            "Pls": "is the left-column border. Pls must be less than or equal to Prs. Default: Pls = 1.",
            "Pbs": "is the bottom-line border.\nDefault: Pbs = the last line of the page.",
            "Ptd": "is the top-line border.\nDefault: Ptd = 1.",
            "Pps": "is the number of the page where the rectangular area is located.\nDefault: Pps = 1.",
            "Pld": "is the left-column border.\nDefault: Pld = 1.",
            "Prs": "is the right-column border.\nDefault: Prs = the last column of the page.",
            "Ptd; Pld; Ppd;": "define the destination of the copied rectangular area.",
            "Pts; Pls; Pbs; Prs; Pps;": "define the rectangular area to be copied (the source). A semicolon (3/11) separates\nparameters.",
            "Pts": "is the top-line border. Pts must be less than or equal to Pbs. Default: Pts = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pts; Pls; Pbs; Prs; Pps;",
                    "Ptd; Pld; Ppd",
                    "$",
                    "v"
                ],
                [
                    "9B",
                    "area to be copied",
                    "destination",
                    "24",
                    "76"
                ]
            ]
        ],
        "default": null,
        "short": "This control function copies a rectangular area of characters from one section\nto another in page memory. The copied text retains its character values and\nattributes.",
        "description": ""
    },
    {
        "code": "DECCRTSM",
        "name": "Set/Reset CRT Save Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "7",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "37",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "7",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "37",
                    "6C"
                ]
            ]
        ],
        "default": "Enable CRT saver",
        "short": "Enable or disable CRT saver.",
        "description": "If CRT saver is enabled and the terminal is inactive for 30 minutes (no keyboard\nactivity or input from a host computer), then the monitor screen goes blank to\nprolong the life of the CRT. No data is lost when CRT saver is active. Keyboard\nactivity or input from the host computer re-activates the monitor.\n\nWhen the monitor goes blank, the keyboard LEDs flash."
    },
    {
        "code": "DECDC",
        "name": "Delete Column",
        "parameters": {
            "Pn": "is the number of columns to delete.\nDefault: Pn = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "'",
                    "~"
                ],
                [
                    "9B",
                    "3n",
                    "27",
                    "7E"
                ]
            ]
        ],
        "default": null,
        "short": "This control function deletes one or more columns in the scrolling region, starting\nwith the column that has the cursor.",
        "description": "As columns are deleted, the remaining columns between the cursor and the\nright margin move to the left. The terminal adds blank columns with no visual\ncharacter attributes at the right margin. DECDC has no effect outside the\nscrolling margins."
    },
    {
        "code": "DECDHL",
        "name": "Double-Width, Double-Height Line",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "#",
                    "3"
                ],
                [
                    "1B",
                    "23",
                    "33"
                ]
            ],
            [
                [
                    "ESC",
                    "#",
                    "4"
                ],
                [
                    "1B",
                    "23",
                    "34"
                ]
            ]
        ],
        "default": null,
        "short": "These two control functions make the line with the cursor the top or bottom half\nof a double-height, double-width line. You must use these sequences in pairs\non adjacent lines. In other words, the same display characters must appear in\nthe same positions on both lines to form double-height characters. If the line\nwas single width and single height, then all characters to the right of the screen\ncenter are lost.",
        "description": "The following sequences make the phrase \"VT510 Video Terminal\" a double-height,\ndouble-width line.\n\nESC#3 VT510 Video Terminal\nESC#4 VT510 Video Terminal"
    },
    {
        "code": "DECDLD",
        "name": "Dynamically Redefinable Character Sets",
        "parameters": {
            "ST is the string terminator. ST is an 8-bit C1 character. You can use": "the equivalent 7-bit sequence, ESC \\ (1/11, 5/12), when coding for a 7-bit\nenvironment.",
            "the first S...S": "represents the sixels in Group A of the soft character.",
            "7": "I F",
            "DCS Pfn ; Pcn; Pe; Pcmw; Pss; Pt; Pcmh; Pcss f Dscs Sxbp1 ; Sxbp2 ; . . . ; Sxbpn": "ST",
            "10": "S...S/S...S",
            "DCS is the device control string introducer. DCS is an 8-bit C1 character. You": "can use the equivalent 7-bit sequence, ESC P (1/11, 5/0), when coding for a 7-bit\nenvironment.",
            "Dscs": "defines the name for the soft character set. You use this name in the select\ncharacter set (SCS) escape sequence. You use the following format for the Dscs\nname:",
            "8": "Examples of Dscs Names",
            "Sxbp1 ; Sxbp2 ; . . . ; Sxbpn": "are the sixel bit patterns for individual characters, separated by semicolons (3/11).\nYour character set can have 1 to 94 patterns or 1 to 96 patterns, depending on\nthe setting of the character set size parameter (Pcss). Each sixel bit pattern is in\nthe following format:",
            "Although the terminal allows you to use two different soft character sets at one": "time, it only allows you to use one DRCS set at one time.",
            "Pfn; Pcn; Pe; Pcmw; Pss; Pt; Pcmh; Pcss": "are parameter characters, separated by semicolons (3/11). Table 5&#8211;2 describes\nthese parameters and lists their possible values. Table 5&#8211;3 describes the\ncombinations of Pcmw, Pt, and Pcmh that you can use for 80- and 132-column\nfonts. If you use any other combinations, then the terminal ignores the DECDLD\nstring.",
            "{": "is the final character. It marks the end of the parameter characters and indicates\nthat this string is a DECDLD function.",
            "/ (2/5)": "advances the sixel pattern to Group B of the soft character."
        },
        "format": [],
        "default": null,
        "short": "DECDLD loads your soft character set into dynamically redefinable character set\n(DRCS) font buffers. Although the terminal has six font buffers, it only supports\nfour buffers for soft character sets.",
        "description": "DCS is the device control string introducer. DCS is an 8-bit C1 character. You\ncan use the equivalent 7-bit sequence, ESC P (1/11, 5/0), when coding for a 7-bit\nenvironment.\n\nST is the string terminator. ST is an 8-bit C1 character. You can use\nthe equivalent 7-bit sequence, ESC \\ (1/11, 5/12), when coding for a 7-bit\nenvironment.\n\nParameters\n\nPfn; Pcn; Pe; Pcmw; Pss; Pt; Pcmh; Pcss\nare parameter characters, separated by semicolons (3/11). Table 5&#8211;2 describes\nthese parameters and lists their possible values. Table 5&#8211;3 describes the\ncombinations of Pcmw, Pt, and Pcmh that you can use for 80- and 132-column\nfonts. If you use any other combinations, then the terminal ignores the DECDLD\nstring.\n\n{\nis the final character. It marks the end of the parameter characters and indicates\nthat this string is a DECDLD function.\n\nDscs\ndefines the name for the soft character set. You use this name in the select\ncharacter set (SCS) escape sequence. You use the following format for the Dscs\nname:\n\nI F\n\n\n\n\nI\nis 0, 1, or 2 intermediate characters from the 2/0 to 2/15 range in the\nASCII character set.\n\n\nF\nis a final character in the 3/0 to 7/14 range.\n\n\n\n\nNotes\n\nIf two downline loaded soft character sets have the same Dscs,\nthen the most recently loaded set is used. The terminal looks for a\nmatching Dscs in reverse load order (last loaded first).\nIf the terminal receives a DRCS control string for a given font number\nwith a different Dscs (designating sequence), Pcmh (height) or Pcss\n(character set size), then the terminal erases the previously downline\nloaded set (if any) in both 80- and 132-column mode.\nIf there is no DRCS available that is compatible with the current\nnumber of lines per screen (font height), then the terminal displays a\nreverse question mark in place of any characters.\n\n\nExamples of Dscs Names\n\n\n\n\n\n\n\n\nName\nFunction\n\n\n\n\nSP2/0\n@4/0\n\nDefines the character set as an unregistered soft set.\nThis value is the recommended default for user-defined\nsets. The value of Pcss defines whether this\nset has 94 or 96 characters.\n\n\nA4/2\n\n\nIf Pcss is 0, then A defines the soft character set as the\nU.K. national replacement character set.\nIf Pcss is 1, then A defines the soft character set as the\nISO Latin-1 supplemental set.\n\n\n&amp;2/6\n%2/5\nC4/3\nDefines the soft character set as % C, which is currently\nan unregistered set. The value of Pcss defines whether\nthis set has 94 or 96 characters.\n\n\n\n\nSxbp1 ; Sxbp2 ; . . . ; Sxbpn\nare the sixel bit patterns for individual characters, separated by semicolons (3/11).\nYour character set can have 1 to 94 patterns or 1 to 96 patterns, depending on\nthe setting of the character set size parameter (Pcss). Each sixel bit pattern is in\nthe following format:\n\nS...S/S...S\n\nthe first S...S\nrepresents the sixels in Group A of the soft character.\n\n/ (2/5)\nadvances the sixel pattern to Group B of the soft character.\n\nthe second S...S\nrepresents the sixels in Group B of the soft character.\n\n\nTable 5&#8211;2 DECDLD Parameter Characters\n\n\n\n\n\nParameter\nName\nDescription\n\n\n\n\nPfn\nFont number\nSelects the DRCS (soft character set) to load.\nThe previous set (if any), that you load with\nthat font number, is erased or overwritten\nas specified by the control sequence. You can\nassign a value of 0, 1, and 2 to Pfn. Other\nvalues cause the terminal to ignore the entire\nsequence. Pfn = 0 defaults to the first empty\nfont buffer, or, if none are empty, to font buffer\n1.\n\n\nPcn\nStarting\ncharacter\nSelects where to load the first character in the\nDRCS font buffer. The location corresponds\nto a location in the ASCII code table. For\nexample, a Pcn value of 0 means that the first\nsoft character is loaded into position 2/0 of the\ncharacter table. A Pcn value of 1 means position\n2/1 in the table, and so on, up to\nPcn = 95 (position 7/15).\nPcn is affected by the character set size. See\nPcss below.\n\n\nPe\nErase control\nSelects which characters to erase from the\nDRCS buffer before loading the new font.\n\n\n\n0\n=\nErases all characters in the DRCS\nbuffer with this number, width, and\nrendition.\n\n\n1\n=\nErases only characters in locations\nbeing reloaded.\n\n\n2\n=\nErases all renditions of the soft\ncharacter set (normal, bold, 80-column, 132-column).\n\n\n\nNote\nErased characters are undefined (not\nblank). The terminal displays these\ncharacters as the error character (reverse\nquestion mark).\n\n\nPcmw\nCharacter\nmatrix width\nSelects the maximum character cell width.\nWhen Pss specifies 80 columns, Pt specifies font\nusage full cell as follows:\n\n\n\n0\n=\n10 pixels wide for 80 columns,\n6 pixels wide for 132 columns.\n(default).\n\n\n2\n=\n5 &#215; 10 pixel cell (width &#215; height).\n\n\n3\n=\n6 &#215; 10 pixel cell (width &#215; height).\n\n\n4\n=\n7 &#215; 10 pixel cell (width &#215; height).\n\n\n5\n=\n5 pixels wide.\n\n\n6\n=\n6 pixels wide.\n\n\n...\n\n\n\n\n10\n=\n10 pixels wide.\n\n\n\nWhen Pss specifies 80 columns, Pt specifies font\nusage text as follows:\n\n\n\n0\n=\n10 pixels wide for 80 columns,\n6 pixels wide for 132 columns.\n(default)\n\n\n2\n=\n5 &#215; 10 pixel cell (width &#215; height).\n\n\n3\n=\n6 &#215; 10 pixel cell (width &#215; height).\n\n\n4\n=\n7 &#215; 10 pixel cell (width &#215; height).\n\n\n5\n=\n5 pixels wide.\n\n\n...\n\n\n\n\n9\n=\n9 pixels wide.\n\n\n\nWhen Pss specifies 132 columns, Pt specifies\nfont usage full cell as follows:\n\n\n\n0\n=\n10 pixels wide for 80 columns,\n6 pixels wide for 132 columns.\n(default)\n\n\n2\n=\n5 &#215; 10 pixel cell (width &#215; height).\n\n\n3\n=\n6 &#215; 10 pixel cell (width &#215; height).\n\n\n4\n=\n7 &#215; 10 pixel cell (width &#215; height).\n\n\n5\n=\n5 pixels wide.\n\n\n6\n=\n6 pixels wide.\n\n\n\nWhen Pss specifies 132 columns, Pt specifies\nfont usage text as follows:\n\n\n\n0\n=\n10 pixels wide for 80 columns,\n6 pixels wide for 132 columns.\n(default)\n\n\n2\n=\n5 &#215; 10 pixel cell (width &#215; height).\n\n\n3\n=\n6 &#215; 10 pixel cell (width &#215; height).\n\n\n4\n=\n7 &#215; 10 pixel cell (width &#215; height).\n\n\n5\n=\n5 pixels wide.\n\n\n\nIf you omit a Pcmw value, the terminal uses the\ndefault character width. If the Pe parameter\nis 0, Pcmw must be less than 10. Any Pcmw\nvalue over 10 is illegal. For illegal values of\nPcmw, the terminal ignores the rest of the load\nsequence.\n\n\nFor VT200 compatible software: Use a Pcmw value of 2, 3, or 4. When you\nuse these values, the VT510 doubles the height of the font definitions in memory.\nThis makes the soft set the same height as the hard sets. If you use a Pcmw\nvalue of 0, then the VT510 does not double the height and the soft set appears\nsmaller than the hard sets. Remember that the VT200 fonts may appear different\non the VT510.\nFor fonts designed for the VT510: Use values 5 through 10.\nFor compatibility between VT200 and VT510 terminals: Use a Pcmw value\nof 5, 6, or 7.\n\n\nPss\nFont set size\nDefines the screen width and screen height for\nthis font.\n\n\n\n0,1\n=\n80 columns, 24 lines. (default)\n\n\n2\n=\n132 columns, 24 lines\n\n\n11\n=\n80 columns, 36 lines\n\n\n12\n=\n132 columns, 36 lines\n\n\n21\n=\n80 columns, 48 lines\n\n\n22\n=\n132 columns, 48 lines\n\n\n\nFor illegal values of Pss, the terminal ignores\nthe rest of the load sequence.\nIf the number of columns or lines/screen\nchanges, then the terminal uses the appropriate\nvariation of the soft set. If you try to display\na DRCS character when there is no soft set\ndefined for the current number of lines and\ncolumns, then the terminal displays the error\ncharacter (reverse question mark).\n\n\n\nNote\nFor VT220 compatibility, you must use a soft font of 80 or\n132 columns (not both). The VT220 allows a single font to\nbe used for 80 and 132 columns.\n\n\n\n\nYou can load a font for any of the six sizes at\nany time. When a new soft set is loaded, any\ncharacters from the previous soft set are lost.\nCharacters currently displayed from the old set\nbecome reverse question marks.\n\n\nPt\nText or full\ncell\nDefines the font as a text font or full-cell font.\n\n\n\n0\n=\ntext. (default)\n\n\n1\n=\ntext.\n\n\n2\n=\nfull cell.\n\n\n\nFull-cell fonts can individually address all pixels\nin a cell.\nText fonts cannot individually address all pixels.\nIf you specify a text cell, then the terminal\nautomatically performs spacing and centering of\nthe characters.\n\n\nPcmh\nCharacter\nmatrix\nheight\nSelects the maximum character cell height.\n\n\n\n0 or omitted\n=\n16 pixels high. (default)\n\n\n1\n=\n1 pixel high.\n\n\n2\n=\n2 pixels high.\n\n\n3\n=\n3 pixels high.\n\n\n...\n\n\n\n\n16\n=\n16 pixels high.\n\n\n\nPcmh values over 16 are illegal. If the value of\nPcmw is 2, 3, or 4, then Pcmh is ignored.\n\n\nPcss\nCharacter\nset size\nDefines the character set as a 94- or 96-\ncharacter graphic set.\n\n\n\n0\n=\n94-character set. (default)\n\n\n1\n=\n96-character set.\n\n\n\nThe value of Pcss changes the meaning of the\nPcn (starting character) parameter above.\n\n\n\nIf Pcss = 0 (94-character set)\nThe terminal ignores any attempt to load characters into the 2/0\nor 7/15 table positions.\n\n\n\nPcn\nSpecifies\n\n\n\n1\ncolumn 2/row 1\n\n\n\n\n...\n\n\n\n94\ncolumn 7/row 14\n\n\n\nIf Pcss = 1 (96-character set)\n\n\n\nPcn\nSpecifies\n\n\n\n0\ncolumn 2/row 0\n\n\n\n\n...\n\n\n\n95\ncolumn 7/row 15\n\n\n\n\n\nTable 5&#8211;3 Valid DECDLD Parameter Combinations\n\n\n\n\n\n\nPt\nPcmw\nPcmh\nPss&#8224;\n\n\n\n\n&#8224;The default values are the maximum legal values in each case.\n\n\n\n\n80-column, 24 lines\n\n\n\n\n\n0 or 1\n0 to 8\n0 to 16\n0 or 1\n\n\n2\n0 to 10\n0 to 16\n0, 1\n\n\n132-column, 24 lines\n\n\n\n\n\n0 or 1\n0 to 5\n0 to 16\n2\n\n\n2\n0 to 6\n1 to 16\n2\n\n\n80-column, 36 lines\n\n\n\n\n\n0 or 1\n0 to 8\n0 to 10\n11\n\n\n2\n0 to 10\n0 to 10\n11\n\n\n132-column, 36 lines\n\n\n\n\n\n0 or 1\n0 to 5\n0 to 10\n12\n\n\n2\n0 to 6\n0 to 10\n12\n\n\n80-column, 48 lines\n\n\n\n\n\n0 or 1\n0 to 8\n0 to 8\n21\n\n\n2\n0 to 10\n0 to 8\n21\n\n\n132-column, 48 lines\n\n\n\n\n\n0 or 1\n0 to 5\n0 to 8\n22\n\n\n2\n0 to 6\n0 to 8\n22\n\n\n\n\nNote\nFor illegal combinations of the Pss, Pt, Pcmw, and Pcmh parameters, the\nterminal ignores the rest of the sequence.\n\n\nTable 5&#8211;4 VT510 Font Sizes\n\n\n\n\n\n80 Columns\n132 Columns\nMaximum Number of Lines\n\n\n\n\n10 &#215; 16\n6 &#215; 16\n26 lines + keyboard indicator line\n\n\n10 &#215; 10\n6 &#215; 10\n42 lines + keyboard indicator line\n\n\n10 &#215; 8\n6 &#215; 8\n53 lines + keyboard indicator line\n\n\n10 &#215; 13\n6 &#215; 13\n26 lines + keyboard indicator line\n(72 Hz with overscan)\n\n\n"
    },
    {
        "code": "DECDMAC",
        "name": "Define Macro",
        "parameters": {
            "Pen": "selects the encoding format for the text of the macro definition.",
            "Pdt": "defines how the terminal treats new macro definitions.",
            "Pid": "is the macro ID number. Pid can be any number between 0 and 63, otherwise\nthe terminal ignores the command. If you give a macro an ID that already exists,\nthen DECDMAC deletes the old macro definition before using the new one.",
            "Programming Tip": "You can find how much memory space you have available for macros by using a\ndevice status report sequence."
        },
        "format": [
            [
                [
                    "DCS",
                    "Pid",
                    ";",
                    "Pdt",
                    ";",
                    "Pen",
                    "!",
                    "z",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "3?",
                    "3B",
                    "3?",
                    "3B",
                    "3?",
                    "21",
                    "7A",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "This device control string lets you define a macro consisting of a string of ANSI\ntext and control functions. After you define the macro, you can execute it by using\nthe invoke macro control function (DECINVM). The terminal processes the macro\nas normal input.",
        "description": ""
    },
    {
        "code": "DECDWL",
        "name": "Double-Width, Single-Height Line",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "#",
                    "6"
                ],
                [
                    "1B",
                    "23",
                    "36"
                ]
            ]
        ],
        "default": null,
        "short": "This control function makes the line with the cursor a double-width, single-height\nline. If the line was single width and single height, then all characters to the\nright of the screen's center are lost.",
        "description": ""
    },
    {
        "code": "DECEKBD",
        "name": "Extended Keyboard Report",
        "parameters": {
            "5": "The terminal uses the following rules when sending extended key reports:",
            "7": "APC : C01 00 / B18.../ B16 / B05 ST",
            "mm": "are two ASCII hexadecimal digits that represent the state of the modifier keys.",
            "For example, 000000102 means that the right Shift key is pressed. The": "hexadecimal value for 000000102 is 0216.",
            "The terminal represents the state of each modifier key as a bit in an 8-bit binary": "number. A bit value of 1 means the key is pressed, and a bit value of 0 means\nthe key is not pressed. mm is the hexadecimal equivalent of the resulting 8-bit\nbinary number.",
            "8": "The following sequence reports a left Shift key and an A key:",
            "The terminal only sends extended key position reports when key position mode": "(DECKPM) is set.",
            "The following table shows the order in which keys are represented in the binary": "number, and their corresponding hexadecimal values when pressed. The least\nsignificant bit represents the left Shift key. The most significant bit represents the\nright Compose&#160;Character key.",
            "The following sequence reports an a key with no modifier keys, four  keys,": "one  key, and a b key:"
        },
        "format": [
            [
                [
                    "APC",
                    ":",
                    "ppp",
                    "mm",
                    "ST"
                ],
                [
                    "9F",
                    "3A",
                    "***",
                    "**",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function is a report that provides applications with more complete\nkeystroke information. Each report consists of an ISO key position code and the\ncurrent state of the eight modifier keys\u2014pressed or released.",
        "description": "The terminal only sends extended key position reports when key position mode\n(DECKPM) is set.\n\nThe terminal uses the following rules when sending extended key reports:\n\n\nA single report may contain more than one keystroke. In this case, each\nkeystroke is separated by a slash (/). The terminal sends the control string\n(APC ... ST) when a modifier key changes, or to separate keystroke data from\nother terminal reports.\nThe terminal only sends the modifier key state when it changes in the first\nkeystroke after an APC character.\nThe terminal sends repeated key position reports as a single repeat character,\nperiod (.).\n\n\nExamples\n\nThe following sequence reports an a key with no modifier keys, four  keys,\none  key, and a b key:\n\nAPC : C01 00 / B18.../ B16 / B05 ST\n\nThe following sequence reports a left Shift key and an A key:\n\nAPC : B99 01 / C01 ST"
    },
    {
        "code": "DECELF",
        "name": "Enable Local Functions",
        "parameters": {
            "Pcn": "controls the action of the local function specified by the corresponding Pfn value."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pf1",
                    ";",
                    "Pc1",
                    ";",
                    "...",
                    "Pfn",
                    ";",
                    "Pcn",
                    "+",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "...",
                    "3n",
                    "3B",
                    "3n",
                    "2B",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "This control function lets you enable or disable the keys used to perform several\nlocal terminal functions: cutting and pasting text, panning, and resizing windows.\nDECELF is useful for:",
        "description": "DECELF can accept any number of parameter pairs. The terminal executes the\nparameters in the order in which it receives them."
    },
    {
        "code": "DECERA",
        "name": "Erase Rectangular Area",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pt",
                    ";",
                    "Pl",
                    ";",
                    "Pb",
                    ";",
                    "Pr",
                    "$",
                    "z"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "24",
                    "7A"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases characters from the specified rectangular area in\npage memory. When an area is erased, DECERA replaces all character positions\nwith the space character (2/0). DECERA erases character values and visual\nattributes from the specified area. DECERA does not erase line attributes.",
        "description": ""
    },
    {
        "code": "DECESKM",
        "name": "Enable Secondary Keyboard Language Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "4",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "34",
                    "38"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "4",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "34",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Select a secondary or primary keyboard language.",
        "description": "When enabled, a secondary keyboard mapping replaces the primary keyboard\nmapping. To use the secondary keyboard mapping, a secondary keyboard\nlanguage has to be defined. See Chapter 8 for information on secondary keyboard\nlanguages."
    },
    {
        "code": "DECFI",
        "name": "Forward Index",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "9"
                ],
                [
                    "1B",
                    "36"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the cursor forward one column. If the cursor is at the\nright margin, then all screen data within the margins moves one column to the\nleft. The column shifted past the left margin is lost.",
        "description": "DECFI adds a new column at the right margin, with no visual attributes. DECFI\nis not affected by the margins. If the cursor is at the right border of the page\nwhen the terminal receives DECFI, then the terminal ignores DECFI."
    },
    {
        "code": "DECFNK",
        "name": "Function Key",
        "parameters": {
            "0": "Ps2indicates the modifier key state."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    "~"
                ],
                [
                    "9B",
                    "3?",
                    "3B",
                    "3?",
                    "7E"
                ]
            ]
        ],
        "default": null,
        "short": "The DECFNK sequences encode the top row function keys, the six editing keypad\nkeys, and the four cursor keys. The top row function keys, (",
        "description": "All combinations of the listed modifiers are coded as shown in Table 5&#8211;5.\n\n\nTable 5&#8211;5 DECFNK Modifiers\n\n\n\n\n\nPs1\nFunction Keystroke\nModifiers Coded by Default\n\n\n\n\n1\nFind\nUnmodified, Control, Alt\n\n\n2\nInsert&#160;Here\nUnmodified, Control, Alt\n\n\n3\nRemove\nUnmodified, Control, Alt\n\n\n4\nSelect\nUnmodified, Control, Alt\n\n\n5\nPrev\nUnmodified, Alt\n\n\n6\nNext\nUnmodified, Alt\n\n\n7\n\nAlt\n\n\n8\n\nAlt\n\n\n9\n\nAlt\n\n\n10\n\nAlt\n\n\n11\nF1\nUnmodified, Shift, Control, Alt\n\n\n12\nF2\nUnmodified, Shift, Control, Alt\n\n\n13\nF3\nUnmodified, Shift, Control, Alt\n\n\n14\nF4\nUnmodified, Shift, Control, Alt\n\n\n15\nF5\nUnmodified, Shift, Control, Alt\n\n\n17\nF6\nUnmodified, Shift, Control, Alt\n\n\n18\nF7\nUnmodified, Shift, Control, Alt\n\n\n19\nF8\nUnmodified, Shift, Control, Alt\n\n\n20\nF9\nUnmodified, Shift, Control, Alt\n\n\n21\nF10\nUnmodified, Shift, Control, Alt\n\n\n23\nF11\nUnmodified, Shift, Control, Alt\n\n\n24\nF12\nUnmodified, Shift, Control, Alt\n\n\n25\nF13\nUnmodified, Shift, Control, Alt\n\n\n26\nF14\nUnmodified, Shift, Control, Alt\n\n\n28\nHelp\nUnmodified, Shift, Control, Alt\n\n\n29\nDo\nUnmodified, Shift, Control, Alt\n\n\n31\nF17\nUnmodified, Shift, Control, Alt\n\n\n32\nF18\nUnmodified, Shift, Control, Alt\n\n\n33\nF19\nUnmodified, Shift, Control, Alt\n\n\n34\nF20\nUnmodified, Shift, Control, Alt\n\n\n\n\nPs2\nModifiers in effect\n\n\n\n\n0 or omitted\nnone\n\n\n1\nnone\n\n\n2\nShift\n\n\n3\nAlt\n\n\n4\nAlt + Shift\n\n\n5\nControl\n\n\n6\nControl + Shift\n\n\n7\nAlt + Control\n\n\n8\nAlt + Control + Shift\n\n\n\n\nNotes\n\n\nShift is not distinguished for the editing and numeric keypad keys by default\nso it does not interfere with touch typing patterns. This means that shifted\nkeys send the same DECFNK sequence as the unshifted keys.\nThe cursor keys are not available unmodified since they send standard cursor\nkey sequences, not DECFNK sequences.\nCtrl with , , Next, and Prev are used for local panning by default.\nTop row function keys F1 through F5 are only available when they are not\nused for local terminal functions.\nShifted top row function keys F6 through F20 are still reserved for user-defined\nkey sequences. The DECFNK sequences become the factory default\nUDK sequences for shifted F6 through F20.\n"
    },
    {
        "code": "DECFRA",
        "name": "Fill Rectangular Area",
        "parameters": {
            "Pch": "is the decimal value of the fill character. Pch can be any value from 32 to 126\nor from 160 to 255. If Pch is not in this range, then the terminal ignores the\nDECFRA command. The decimal value refers to the character in the current GL\nor GR in-use table."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pch",
                    ";",
                    "Pt; Pl; Pb; Pr",
                    "$",
                    "x"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "24",
                    "78"
                ]
            ]
        ],
        "default": null,
        "short": "This control function fills a rectangular area in page memory with a specified\ncharacter. DECFRA replaces the rectangular area's character positions and\nattributes with the specified fill character. The fill character assumes the visual\ncharacter attributes set by the last select graphic rendition (SGR) command.\nDECFRA does not change the current line attributes.",
        "description": ""
    },
    {
        "code": "DECHDPXM",
        "name": "Set/Reset Half-Duplex Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "3",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "33",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "3",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "33",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Enables half-/full-duplex communication.",
        "description": "Full-duplex mode allows simultaneously two-way communication; half-duplex\nmode is limited to one-way communication at any given time. Half-duplex\nmode is available only in an RS232 line. Refer to Chapter 9 for details about\nhalf-duplex mode communication protocol."
    },
    {
        "code": "DECHEBM",
        "name": "Hebrew/N-A Keyboard Mapping",
        "parameters": {
            "When 7-bit characters are selected or the terminal is set to VT100 mode, setting": "DECHEBM does the following:"
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "5",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "35",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "5",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "35",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function sets the keyboard mapping to Hebrew/N-A and resets the\nmapping to North American.",
        "description": "When 8-bit characters are selected, DECHEBM switches between the Group\n1 and the Group 2 character set mappings. It does not affect the keyboard\ncharacter set selection or the processing of received characters.\n\nWhen 7-bit characters are selected or the terminal is set to VT100 mode, setting\nDECHEBM does the following:\n\n\nSwitches keyboard map to Group 2.\nMakes DEC 7-bit Hebrew the keyboard character set.\nCauses received characters in the range of 60 to 7A (hex) to be displayed\nusing the DEC 7-bit Hebrew when ASCII is designated or invoked and\nkeyboard Group 2 is active.\n\n\nResetting DECHEBM does the following:\n\n\nSwitches keyboard map to Group 1.\nMakes ASCII the keyboard character set.\nCauses received characters to be displayed using the graphic left (GL) table of\ncharacters in use at the time.\n\n\nNote\nDECHEBM is only valid when a Hebrew keyboard language is selected.\nAlso it does not convert ASCII or Hebrew characters already on the\ndisplay."
    },
    {
        "code": "DECHEM",
        "name": "Hebrew Encoding Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "6",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "36",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "6",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "36",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function sets the terminal's character set mode to DEC (8-bit)\nmultinational mode. On a reset, the sequence resets the terminal's character set\nmode to (7-bit) national mode (NRC sets).",
        "description": ""
    },
    {
        "code": "DECIC",
        "name": "Insert Column",
        "parameters": {
            "Pn": "is the number of columns to insert.\nDefault: Pn = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "'",
                    "}"
                ],
                [
                    "9B",
                    "3?",
                    "27",
                    "7D"
                ]
            ]
        ],
        "default": null,
        "short": "This control function inserts one or more columns into the scrolling region,\nstarting with the column that has the cursor.",
        "description": "As columns are inserted, the columns between the cursor and the right margin\nmove to the right. DECIC inserts blank columns with no visual character\nattributes. DECIC has no effect outside the scrolling margins."
    },
    {
        "code": "DECINVM",
        "name": "Invoke Macro",
        "parameters": {
            "3": "First, you would write the string with ASCII characters as follows:",
            "7": "To invoke the macro, use the following sequence:",
            "Pid": "is the macro ID number. If the Pid is not associated with a particular macro, the\nterminal ignores the command.",
            "Then, you must convert the string into hexadecimal code because the string uses": "the repeat (!) character. You can only use the repeat character with hexadecimal\nsequences. The following example is the same string written in hex:",
            "Any functions executed with a macro invocation remain in affect after the": "terminal executes the macro.",
            "DCS 1 ; 0 ; 1 ! z 9B 36 20 50 ! 6 ; 9B 31 3B 48 9B 32 49 54": "4F 50 9B 31 56 ; ST",
            "DCS 1 ; 0 ; 1 ! z CSI 6 SP P ! 6 ; CSI 1 ; 1 H CSI 2 J TOP": "CSI 1 V ; ST",
            "Suppose you want to create a macro that clears all pages in page memory, writes": "the word \"top\" at the top of each page, and leaves the cursor on page 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pid",
                    "*",
                    "z"
                ],
                [
                    "9B",
                    "3n",
                    "2A",
                    "7A"
                ]
            ]
        ],
        "default": null,
        "short": "This control function lets you execute a stored macro. You store macros with\nthe define macro (DECDMAC) control string. The terminal substitutes the\nDECINVM sequence with the contents of the macro definition and executes the\nmacro.",
        "description": ""
    },
    {
        "code": "DECIPEM",
        "name": "Enter/Return from IBM ProPrinter Emulation Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "8",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "38",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "8",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "38",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Exit from DEC protocol and interpret subsequent data according to the IBM\nProPrinter protocol syntax. This sequence also resets IBM ProPrinter mode to its\ninitial state.",
        "description": ""
    },
    {
        "code": "DECKBD",
        "name": "Keyboard Language Selection",
        "parameters": {
            "Ps2": "indicates the national keyboard language.",
            "The first selective parameter, Ps1, denotes a keyboard type, VT layout or": "Enhanced PC keyboard layout. The second parameter, Ps2, indicates the national\nkeyboard language."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    "SP",
                    "}"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "20",
                    "7D"
                ]
            ]
        ],
        "default": null,
        "short": "Select a national keyboard language on either a VT keyboard or an Enhanced PC\nkeyboard.",
        "description": "The first selective parameter, Ps1, denotes a keyboard type, VT layout or\nEnhanced PC keyboard layout. The second parameter, Ps2, indicates the national\nkeyboard language.\n\nSelecting a new keyboard language automatically initializes the keyboard\ncharacter set. Refer to Chapter 8 for more details."
    },
    {
        "code": "DECKBUM",
        "name": "Typewriter or Data Processing Keys",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "8",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "38",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "8",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "38",
                    "6C"
                ]
            ]
        ],
        "default": "Typewriter keys",
        "short": "You can select whether the main keyboard keys act as data processing keys or\ntypewriter keys by using the keyboard usage mode (DECKBUM) function.",
        "description": "If DECKBUM is set, then data processing keys send the characters on the right\nhalf of their keycaps.\n\nIf DECKBUM is reset, then data processing keys send the characters on the left\nhalf of their keycaps.\n\nNotes on DECKBUM\n\n\nDECKBUM changes the characters that the main keyboard keys send. Make\nsure you are aware of this change if you use DECKBUM in an application.\nIf you use the North American language, then DECKBUM should always be\nreset (typewriter). For all other languages, you can use either mode.\n"
    },
    {
        "code": "DECKLHIM",
        "name": "Keyboard LED's Host Indicator Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "1",
                    "0",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "31",
                    "30",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "1",
                    "0",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "31",
                    "30",
                    "6C"
                ]
            ]
        ],
        "default": "Reset",
        "short": "DECKLHIM controls the state of the keyboard LED's host indicator mode.",
        "description": "DECLL controls keyboard LEDs independently of any keyboard state. The use\nof LEDs for this purpose conflicts with their use as keyboard state indicators.\nDECKLHIM selects a mode of how the keyboard LEDs are to be used: as\nkeyboard indicators; or host indicators. If host indicators is selected, then the\nDECLL sequence can be used to control the keyboard LEDs.\n\nFor DECLL to function, DECKLHIM must be set. See DECLL for the\nimplications of using DECLL to control the keyboard LEDs independently of\nany keyboard state."
    },
    {
        "code": "DECKPAM",
        "name": "Keypad Application Mode",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "="
                ],
                [
                    "1B",
                    "3D"
                ]
            ]
        ],
        "default": null,
        "short": "DECKPAM enables the numeric keypad to send application sequences to the host.\nDECKPNM enables the numeric keypad to send numeric characters.",
        "description": ""
    },
    {
        "code": "DECKPM",
        "name": "Key Position Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "8",
                    "1",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "38",
                    "31",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "8",
                    "1",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "38",
                    "31",
                    "6C"
                ]
            ]
        ],
        "default": "Send character codes",
        "short": "This control function selects whether the keyboard sends character codes or key\nposition reports to the host. DECKPM lets new applications take full control\nof the keyboard including single shifts, locking shifts, and compose character\nprocessing.",
        "description": "If the DECKPM function is set, then all keyboard keys send extended reports\nthat include the key position and the state of modifier keys when pressed. A\nmodifier key is pressed in combination with another key to modify the code sent\nby that key. The Ctrl key is a modifier key.\n\nIf the DECKPM function is reset, then the keyboard keys send character codes.\n\nNote on DECKPM\n\nDECKPM only affects keyboard input; it does not affect how the terminal\ninterprets data from the host."
    },
    {
        "code": "DECKPNM",
        "name": "Keypad Numeric Mode",
        "parameters": {
            "0": "Default: Send numeric keypad characters.",
            "DECKPNM enables the numeric keypad to send the characters shown on each": "key&#8212;number, comma, period, or minus sign. Keys PF1 to PF4 send application\nsequences. See DECKPAM&#8212;Keypad Application Mode for more information."
        },
        "format": [
            [
                [
                    "ESC",
                    "&gt;"
                ],
                [
                    "1B",
                    "3E"
                ]
            ]
        ],
        "default": "Send numeric keypad characters",
        "short": "DECKPNM enables the keypad to send numeric characters to the host.\nDECKPAM enables the keypad to send application sequences.",
        "description": "DECKPNM enables the numeric keypad to send the characters shown on each\nkey&#8212;number, comma, period, or minus sign. Keys PF1 to PF4 send application\nsequences. See DECKPAM&#8212;Keypad Application Mode for more information.\n\nNote on DECKPNM\n\nThe setting is not saved in NVM. When you turn on or reset the terminal, it\nautomatically selects numeric keypad mode."
    },
    {
        "code": "DECLANS",
        "name": "Load Answerback Message",
        "parameters": {
            "The selective parameter denotes the encoding of the answerback message. A \"1\"": "is always used for the VT510 indicating answerback is encoded as hex pairs. The\nsequence is ignored if any number other than \"1\" is specified in the Ps field.",
            "Once defined, the message may be stored in the non-volatile memory if Save": "settings is executed in the Set-Up.",
            "Pressing Ctrl/Break or receiving ENQ code causes the VT510 to transmit the": "answerback message. In on-line mode, the answerback message is transmitted to\nthe appropriate host port. The answerback is not echoed in local echo and is not\n\"sent\" in local mode."
        },
        "format": [
            [
                [
                    "DCS",
                    "Ps",
                    "v",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "3n",
                    "76",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "This sequence loads an answerback message into the terminal's memory.",
        "description": "The answerback data string may consist of from 0 to 30, 7- or 8-bit characters,\nwhich are hex pairs in the range 3/0 - 3/9 (0 through 9), 4/1 - 4/6 (A through F),\nand 6/1 - 6/6 (A through F).\n\nOnce defined, the message may be stored in the non-volatile memory if Save\nsettings is executed in the Set-Up.\n\nThe selective parameter denotes the encoding of the answerback message. A \"1\"\nis always used for the VT510 indicating answerback is encoded as hex pairs. The\nsequence is ignored if any number other than \"1\" is specified in the Ps field.\n\nPressing Ctrl/Break or receiving ENQ code causes the VT510 to transmit the\nanswerback message. In on-line mode, the answerback message is transmitted to\nthe appropriate host port. The answerback is not echoed in local echo and is not\n\"sent\" in local mode.\n\nThe answerback message is transmitted as keyboard data. Any speed restrictions\n(as set in limited transmit) apply."
    },
    {
        "code": "DECLBAN",
        "name": "Load Banner Message",
        "parameters": {
            "This command only loads the banner message into dynamic memory. It is": "necessary to do a Save settings in the Set-Up menu to store the banner message\nin NVM so that it will be displayed at power up.",
            "D ... D": "is a 30-character string. If a matching Ps value is selected as an encoding\nmethod, then you can select to define the string by the characters in the default\ncharacter set or by hexadecimal pairs."
        },
        "format": [
            [
                [
                    "DCS",
                    "Ps",
                    "r",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "3s",
                    "72",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "DECLBAN loads the banner message to be displayed on the terminal screen at\npower up.",
        "description": "This command only loads the banner message into dynamic memory. It is\nnecessary to do a Save settings in the Set-Up menu to store the banner message\nin NVM so that it will be displayed at power up.\n\nThe terminal displays the banner message in double size characters above the\nSelftest OK message."
    },
    {
        "code": "DECLFKC",
        "name": "Local Function Key Control",
        "parameters": {
            "0": "This control function is useful for:",
            "DECLFKC can accept any number of parameter pairs. The terminal executes the": "parameters in the order in which it receives them.",
            "Pkn": "is a number from 0 to 4 that corresponds to the local function key affected (F1 to\nF4). A Pkn value of 0 means that all four keys (F1 through F4) are affected.",
            "Pfn": "controls the action of the local function key specified by the corresponding Pkn\nvalue."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pk1",
                    ";",
                    "Pf1",
                    "...",
                    "Pkn",
                    ";",
                    "Pfn",
                    "*",
                    "}"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "...",
                    "3n",
                    "3B",
                    "3n",
                    "2A",
                    "7D"
                ]
            ]
        ],
        "default": null,
        "short": "This control function lets you select the action performed by some of the local\nfunction keys on the top row of the keyboard:",
        "description": "DECLFKC can accept any number of parameter pairs. The terminal executes the\nparameters in the order in which it receives them.\n\nNote on DECLFKC\n\nApplications cannot disable the F5 (Break) key using this command. This\nrestriction is required for secure systems, which ensures that the operator has\ncontrol of the communication line."
    },
    {
        "code": "DECLL",
        "name": "Load LEDs",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "Load the programmable LEDs on the keyboard according to its parameters.",
        "description": "DECLL controls keyboard LEDs independently of any keyboard state. The use\nof LEDs for this purpose conflicts with their use as keyboard state indicators.\nDECKLHIM selects a mode of how the keyboard LEDs are to be used: as\nkeyboard indicators; or host indicators. If host indicators is selected, then the\nDECLL sequence can be used to control the keyboard LEDs.\n\nFor DECLL to function, DECKLHIM must be set."
    },
    {
        "code": "DECLRMM",
        "name": "Left Right Margin Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "9",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "39",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "9",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "39",
                    "6C"
                ]
            ]
        ],
        "default": "VT Level 4 mode only",
        "short": "This control function defines whether or not the set left and right margins\n(DECSLRM) control function can set margins.",
        "description": "When DECLRMM is set, DECSLRM can set the left and right margins. All line\nattributes currently in page memory for the session are set to single width, single\nheight. The terminal ignores any sequences to change the line attributes to\ndouble width or double height (DECDWL or DECDHL).\n\nWhen DECLRMM is reset, DECSLRM cannot set the left and right margins.\nThe margins are set to the page borders for every page. The terminal can\nprocess sequences to change the line attributes to double width or double height\n(DECDWL or DECDHL)."
    },
    {
        "code": "DECLTOD",
        "name": "Load Time of Day",
        "parameters": {
            "0": "The default value is 8, indicating 8:00 a.m.",
            "Ps2": "specifies the minutes, which is a 2-digit decimal number between 00 and 59."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    ",",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "2C",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "This sequence loads the time of day into the terminal's memory. When loaded,\nthe time of day is displayed in the Status line if the Status line is enabled.",
        "description": ""
    },
    {
        "code": "DECMCM",
        "name": "Set/Reset Modem Control Mode",
        "parameters": {
            "When enabled for the Comm1 (25-pin EIA) connector, the terminal does not": "transmit unless CTS is asserted. If a connection has not been established (DSR\nis deasserted), RLSD is ignored. Transmission and reception may still occur if\nCTS is asserted. Assertion of CTS with DSR and RLSD asserted indicates a\nconnection has been established. (CTS is checked last.)"
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "9",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "36",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "9",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "36",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Enables (set) or disables (reset) modem control.",
        "description": "When enabled for the Comm2 connector, no data is transmitted or received\nunless DSR is asserted. Assertion of DSR alone is sufficient to establish a\nconnection. Loss of DSR causes a disconnect. When DSR is not asserted, no\ndata is transmitted, and incoming receive data is ignored. When DSR is again\nasserted, the communications state is re-initialized to prepare for the new\nconnection.\n\nWhen enabled for the Comm1 (25-pin EIA) connector, the terminal does not\ntransmit unless CTS is asserted. If a connection has not been established (DSR\nis deasserted), RLSD is ignored. Transmission and reception may still occur if\nCTS is asserted. Assertion of CTS with DSR and RLSD asserted indicates a\nconnection has been established. (CTS is checked last.)\n\nWhen Modem Control is disabled, transmission and reception occur regardless\nof the state of the modem control signal. The terminal communicates using data\nleads only. DTR and RTS are always asserted except during an operator initiated\ndisconnect sequence, or the input buffer reaches the 64-byte threshold when DTR\nflow control scheme is selected."
    },
    {
        "code": "DECMSR",
        "name": "Macro Space Report",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "*",
                    "{"
                ],
                [
                    "9B",
                    "3n",
                    "3A",
                    "7B"
                ]
            ]
        ],
        "default": null,
        "short": "DECMSR is the terminal's response to a DSR from the host. DECMSR indicates\nthe number of bytes available for macro definitions.",
        "description": ""
    },
    {
        "code": "DECNAKB",
        "name": "Greek/N-A Keyboard Mapping",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "7",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "37",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "7",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "37",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function sets the keyboard mapping to North American and resets\nthe mapping to Greek/N-A.",
        "description": ""
    },
    {
        "code": "DECNCSM",
        "name": "Set/Reset No Clearing Screen On Column Change",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "5",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "35",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "5",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "35",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Set/reset the following condition: do not clear the screen whenever the column\nmode changes.",
        "description": "When enabled, a column mode change (either through Set-Up or by the escape\nsequence DECCOLM) does not clear the screen. When disabled, the column mode\nchange clears the screen as a side effect.\n\nThis sequence does not affect the column mode change caused by the sequence,\nDECSCPP."
    },
    {
        "code": "DECNKM",
        "name": "Numeric Keypad Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "6",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "36",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "6",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "36",
                    "6C"
                ]
            ]
        ],
        "default": "Numeric",
        "short": "This control function works like the DECKPAM and DECKPNM functions.\nDECNKM is provided mainly for use with the request and report mode\n(DECRQM/DECRPM) control functions.",
        "description": ""
    },
    {
        "code": "DECNRCM",
        "name": "National Replacement Character Set Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "4",
                    "2",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "34",
                    "32",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "4",
                    "2",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "34",
                    "32",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Enable operation in 7-bit or 8-bit character mode.",
        "description": "The character set mode is reset to 8-bit characters. In 8-bit mode, the terminal\noperates as a normal level 4 terminal allowing 8-bit controls and using the default\ncharacter set, which is user-selectable for transmission and reception."
    },
    {
        "code": "DECNULM",
        "name": "Set/Reset Ignoring Null Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "2",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "32",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "2",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "32",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "Allow Null (NUL) characters to be ignored or buffered at printer port only.",
        "description": "When set, the NUL character is discarded on receipt from the host. When reset,\nthe NUL character is passed through to the printer."
    },
    {
        "code": "DECNUMLK",
        "name": "Num Lock Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "8",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "38",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "8",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "38",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "DECNUMLK controls the state of the keyboard's ",
        "description": ""
    },
    {
        "code": "DECOM",
        "name": "Origin Mode",
        "parameters": {
            "3": "Default: Overscan disabled (reset).",
            "When DECOM is set, the home cursor position is at the upper-left corner of the": "screen, within the margins. The starting point for line numbers depends on the\ncurrent top margin setting. The cursor cannot move outside of the margins.",
            "When DECOM is reset, the home cursor position is at the upper-left corner of the": "screen. The starting point for line numbers is independent of the margins. The\ncursor can move outside of the margins.",
            "4": "When set, overscan is enabled.",
            "2": "Sets or resets overscan mode."
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "6C"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "6",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "36",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "0",
                    "6",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "30",
                    "36",
                    "6C"
                ]
            ]
        ],
        "default": "Origin is at the upper-left of the screen, independent of margins",
        "short": "This control function sets the origin for the cursor. DECOM determines if the\n",
        "description": "When DECOM is set, the home cursor position is at the upper-left corner of the\nscreen, within the margins. The starting point for line numbers depends on the\ncurrent top margin setting. The cursor cannot move outside of the margins.\n\nWhen DECOM is reset, the home cursor position is at the upper-left corner of the\nscreen. The starting point for line numbers is independent of the margins. The\ncursor can move outside of the margins.\n\nDECOSCNM&#8212;Set/Reset Overscan Mode\n\nSets or resets overscan mode.\n\nDefault: Overscan disabled (reset).\n\nFormat\n\n\n\n\nCSI9/11\n?3/15\n13/1\n03/0\n63/6\nh6/8\nEnable overscan\n\n\n\n\n\n\n\nCSI9/11\n?3/15\n13/1\n03/0\n63/6\nl6/12\nDisable overscan (Default)\n\n\n\n\nDescription\n\nWhen set, overscan is enabled.\n\nOverscan and 72 Hz refresh rate cannot co-exist when the terminal is set to 42 or\n53 lines per screen. Refer to DECSNLS&#8212;Set Lines Per Screen for details."
    },
    {
        "code": "DECPAK",
        "name": "Program Alphanumeric Key",
        "parameters": {
            "0": "This function works in all the VT modes except in VT52 mode.",
            "Function #": "corresponds to a local function to be performed when the key is pressed in\ncombination with the Alt function. Example: Function number \"0\" is used to\nmake the Key/Alt combination inoperative. Function number \"100\" indicates\na user-defined sequence (UDS), and a UDS direction is defined for the Key/Alt\ncombination following the \"/\" delimiter.",
            "2": "The data string D...D format is:",
            "3": "Key1/HEX Code String/Function #/UDS/UDS Direction;Key2/...;",
            "9": "You should program the Hex string according in the following order:",
            "If the control state is not redefined in this sequence, then the Key/Ctrl combination": "generates the control code based on the \"Group 1 unshifted\" state.",
            "The memory allocation and deallocation processes (program key lock and": "unlock process) on the DECPAK are the same as on the DECPFK. Refer to\nDECPFK&#8212;Program Function Key for details.",
            "The terminal always allows the ISO character set to be used for specifying accent": "marks to DECPAK even when:",
            "The corresponding ISO character set would be based on the keyboard language.": "Refer to Chapter 8 for keyboard information.",
            "Keyn": "is the key station number and slash \"/\" is a delimiter.",
            "HEX code string": "is the hex character code to be transmitted with each of the seven modifier states.\nThe hex code represents a valid code in the current character set (either 7-bit or\n8-bit). Use a period \".\" as a place holder if a modifier combination is not to be\ndefined. Use a minus \"-\" preceding the hex representation of a diacritical sign if a\ndiacritical mark is to be defined.",
            "The position of the diacritical marks within the ISO Latin character sets is as": "follows:",
            "UDS and UDS direction": "is a user-defined sequence. These parameters are the same as for DECPFK. Refer\nto DECPFK&#8212;Program Function Key for the details.",
            "A graphic key transmits alphanumeric codes only when pressed with the above": "modifiers. When pressed with Alt key, the graphic key performs either:"
        },
        "format": [
            [
                [
                    "DCS",
                    "\"",
                    "y",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "22",
                    "79",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "Allow users to reprogram keys to transmit user-preferred alphanumeric codes or\nto perform user-preferred functions.",
        "description": "This sequence programs one or more keys (and their modifiers) to:\n\n\nTransmit desired alphanumeric codes\nPerform a local function or send user-defined sequence\n\n\nThis function works in all the VT modes except in VT52 mode.\n\nThe memory allocation and deallocation processes (program key lock and\nunlock process) on the DECPAK are the same as on the DECPFK. Refer to\nDECPFK&#8212;Program Function Key for details.\n\nThe data string D...D format is:\n\nKey1/HEX Code String/Function #/UDS/UDS Direction;Key2/...;\n\nParameters\n\nKeyn\nis the key station number and slash \"/\" is a delimiter.\n\nHEX code string\nis the hex character code to be transmitted with each of the seven modifier states.\nThe hex code represents a valid code in the current character set (either 7-bit or\n8-bit). Use a period \".\" as a place holder if a modifier combination is not to be\ndefined. Use a minus \"-\" preceding the hex representation of a diacritical sign if a\ndiacritical mark is to be defined.\n\nThe terminal always allows the ISO character set to be used for specifying accent\nmarks to DECPAK even when:\n\n\n7-bit NRCs characters are selected\nThe ISO character set is not the user-preferred supplemental character set\n\n\nThe corresponding ISO character set would be based on the keyboard language.\nRefer to Chapter 8 for keyboard information.\n\nThe position of the diacritical marks within the ISO Latin character sets is as\nfollows:\n\n\n\n\n\n\n\nDiacritical Sign\nPosition\nAvailable ISO Character Set(s)\n\n\n\n\nCircumflex\n5/14\nASCII\n\n\nGrave\n6/0\nASCII\n\n\nTilde\n7/14\nASCII\n\n\nDieresis (umlaut)\n10/8\nLatin 1, Latin 2, Latin Greek, Latin Turkish\n\n\nDegree (ring)\n11/0\nLatin 1, Latin 2, Latin Greek, Latin Turkish\n\n\nAcute\n11/4\nLatin 1, Latin 2, Latin Greek, Latin Turkish\n\n\nCedilla\n11/8\nLatin 1, Latin 2, Latin Turkish\n\n\nMacron\n10/15\nLatin 1\n\n\nBreve\n10/2\nLatin 2\n\n\nOgonek\n11/2\nLatin 2\n\n\nCaron\n11/7\nLatin 2\n\n\nDouble Acute Accent\n11/13\nLatin 2\n\n\nDot Above\n15/15\nLatin 2\n\n\n\n\nYou should program the Hex string according in the following order:\n\n\nGroup 1 unshifted\nGroup 1 shifted\nGroup 1 alternate shifted (Shift 2)\nGroup 2 (Group Shift or Alt Gr) unshifted\nGroup 2 shifted\nGroup 2 alternate shifted\nControl (if omitted, use default)\n\n\nIf the control state is not redefined in this sequence, then the Key/Ctrl combination\ngenerates the control code based on the \"Group 1 unshifted\" state.\n\nA graphic key transmits alphanumeric codes only when pressed with the above\nmodifiers. When pressed with Alt key, the graphic key performs either:\n\n\nLocal terminal function\nUser-defined sequence (same as UDK)\n\n\nFunction #\ncorresponds to a local function to be performed when the key is pressed in\ncombination with the Alt function. Example: Function number \"0\" is used to\nmake the Key/Alt combination inoperative. Function number \"100\" indicates\na user-defined sequence (UDS), and a UDS direction is defined for the Key/Alt\ncombination following the \"/\" delimiter.\n\nUDS and UDS direction\nis a user-defined sequence. These parameters are the same as for DECPFK. Refer\nto DECPFK&#8212;Program Function Key for the details.\n\nOnce programmed, the key states are not affected by the terminal mode changes.\nRefer to DECPFK&#8212;Program Function Key for the list of terminal mode changes."
    },
    {
        "code": "DECPCCM",
        "name": "Page Cursor-Coupling Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "4",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "44",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "4",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "44",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function determines if a new page appears in the display when the\ncursor moves to a new page. DECPCCM is only useful with a multiple-page\nformat.",
        "description": "When DECPCCM is set, the cursor is coupled to the display when the cursor\nmoves to a new page. The new page appears in the display to keep the cursor in\nview.\n\nWhen DECPCCM is reset, the cursor is uncoupled from the display. If the cursor\nmoves to a new page, then the cursor disappears."
    },
    {
        "code": "DECPCTERM",
        "name": "Enter/Exit PCTerm or Scancode Mode",
        "parameters": {
            "Ps2": "indicates the character set selection. See SCS&#8212;Select Character Set for the\ncharacter set designators.",
            "The character sets selectable with single-digit Ps2 parameters are available for": "both VT mode and PCTerm mode. If you select one of these character sets for use\nin PCTerm mode, then you can use the SCS&#8212;Select Character Set command to\nmodify the PCTerm character set."
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "Ps1",
                    ";",
                    "Ps2",
                    "r"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "3B",
                    "3n",
                    "72"
                ]
            ]
        ],
        "default": null,
        "short": "DECPCTERM enables you to switch the terminal between VT mode and PCTerm\nmode, while the terminal is in VT mode. It also enables you to switch the\nterminal between ASCII character and scancode keycode mode, while the\nterminal is in SCO Console mode.",
        "description": "The character sets selectable with single-digit Ps2 parameters are available for\nboth VT mode and PCTerm mode. If you select one of these character sets for use\nin PCTerm mode, then you can use the SCS&#8212;Select Character Set command to\nmodify the PCTerm character set.\n\nThe PC character sets selectable with three-digit Ps2 parameters are available\nonly in PCTerm mode or SCO console emulation. (SCO console uses PC character\nsets.) If you select one of these PC character sets, then the SCS command to\ninvoke a character set is ignored.\n\n\n\n\n\n\nPs2\nCharacter Set\n\n\n\n\n0 or none\nNo Change\n\n\n1\nPC Multilingual\n\n\n2\nPC International\n\n\n3\nPC Danish/Norwegian\n\n\n4\nPC Spanish\n\n\n5\nPC Portuguese\n\n\n6\nDEC Supplemental\n\n\n7\nISO Latin 1\n\n\n8\nVT character set\n\n\n210\nPC Greek\n\n\n220\nPC Spanish\n\n\n437\nPC International\n\n\n850\nPC Multilingual\n\n\n852\nPC Slavic (Latin 2)\n\n\n857\nPC Turkish\n\n\n860\nPC Portuguese\n\n\n862\nPC Hebrew\n\n\n863\nPC French Canadian\n\n\n865\nPC Danish\n\n\n866\nPC Cyrillic\n\n\n"
    },
    {
        "code": "DECPEX",
        "name": "Printer Extent Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "9",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "39",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "9",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "39",
                    "6C"
                ]
            ]
        ],
        "default": "Scrolling region",
        "short": "This control function selects how much data you can print when you use the print\npage function.",
        "description": ""
    },
    {
        "code": "DECPFF",
        "name": "Print Form Feed Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "8",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "38",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "1",
                    "8",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "31",
                    "38",
                    "6C"
                ]
            ]
        ],
        "default": "No form feed",
        "short": "This control function selects whether or not the terminal sends a form feed (FF)\ncharacter to the printer at the end of a printing function. DECPFF does not affect\nthe print cursor line function described in the next section.",
        "description": ""
    },
    {
        "code": "DECPFK",
        "name": "Program Function Key",
        "parameters": {
            "Function #": "represents a number associated with a local function. For example, function\nnumber \"0\" is used to make the key or key/modifier inoperative. Function number\n\"100\" indicates a user-defined sequence (UDS) and UDS direction is defined\nfollowing the slash \"/\" delimiter. Refer to Chapter 8.",
            "Any of the following four methods may be used to define a key to transmit a": "user-defined sequence (either single byte or multiple bytes):",
            "There are 804 bytes reserved for programmable key operations. This memory is": "shared by the following four functions:",
            "UDS": "is a user-defined sequence with a maximum length of 255 bytes, which must be\nwritten in Hex format for DEC/ANSI terminals. Each hex code in this string\nrepresents a value transmitted by the defined key combined with the modifiers.",
            "Space is supplied on a first-come, first-serve basis. Once the 804 bytes are used,": "no more keys may be redefined unless space is made available. Space may be\nmade available by restoring keys back to their default states. There are four\nways to do this:",
            "The free bytes left for key programming can be seen using the Define Key": "Editor in Set-Up. D ... D are the key definition strings such as:",
            "10": "Default: None (Normal)",
            "Dir (UDS Direction)": "the user-defined sequence (UDS) direction of the transmission.",
            "Once programmed, the key state is not effected by the terminal mode changes": "listed below:",
            "Keyn": "is the key station number and a slash \"/\" is a delimiter. Refer to Chapter 8 for\nthe key station number map.",
            "This sequence is ignored when the program key function is locked through": "DECPKA, DECUDK, or Set-Up.",
            "Modn": "denotes the modifier key that is to be pressed at the same time as the defined\nkey.",
            "Key1/Mod1/Function #/UDS/UDS Direction;": "Key2/Mod2/Function #/UDS/UDS Direction;........;"
        },
        "format": [
            [
                [
                    "DCS",
                    "\"",
                    "x",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "22",
                    "78",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": "None (Normal)",
        "short": "Used to reprogram function keys.",
        "description": "This sequence programs one or more keys (and their modifier combinations) from\nthe current state to perform user-desired functions. The type of the function\nprogrammed must be either:\n\n\na local terminal function\na user-defined sequence (same as UDK)\n\n\nThis sequence is ignored when the program key function is locked through\nDECPKA, DECUDK, or Set-Up.\n\nThere are 804 bytes reserved for programmable key operations. This memory is\nshared by the following four functions:\n\n\nProgram keys through DECPFK or through Set-Up\nProgram keys through DECPAK or through Set-Up\nCopy other key default through DECCKD or Set-Up\nProgram user-defined keys through DECUDK\n\n\nSpace is supplied on a first-come, first-serve basis. Once the 804 bytes are used,\nno more keys may be redefined unless space is made available. Space may be\nmade available by restoring keys back to their default states. There are four\nways to do this:\n\n\nExecute a Restore factory defaults from the Set-Up main menu. All the\nterminal parameters, including the keys, return to their default states.\nExecute a \"Restore factory defaults of all keys and key definitions\" either\nthrough DECPKA (Program Key Action) or Recall key definitions in\nSet-Up. This action also releases the 804 bytes.\nExecute a Copy key default to copy a key's own default either through\nDECCKD or in Set-Up to free the space occupied by the destination key.\nClear UDKs by issuing a clear function in DECUDK.\n\n\nThe free bytes left for key programming can be seen using the Define Key\nEditor in Set-Up. D ... D are the key definition strings such as:\n\nKey1/Mod1/Function #/UDS/UDS Direction;\nKey2/Mod2/Function #/UDS/UDS Direction;........;\n\nParameters\n\nKeyn\nis the key station number and a slash \"/\" is a delimiter. Refer to Chapter 8 for\nthe key station number map.\n\nModn\ndenotes the modifier key that is to be pressed at the same time as the defined\nkey.\n\n\n\n\n\n\nModn\nModifier Key\n\n\n\n\n0 or None\nNormal\n\n\n1\nNormal\n\n\n2\nShift\n\n\n3\nAlt\n\n\n4\nAlt + Shift\n\n\n5\nControl\n\n\n6\nShift + Control\n\n\n7\nAlt + Control\n\n\n8\nAlt + Control + Shift\n\n\n\n\nFunction #\nrepresents a number associated with a local function. For example, function\nnumber \"0\" is used to make the key or key/modifier inoperative. Function number\n\"100\" indicates a user-defined sequence (UDS) and UDS direction is defined\nfollowing the slash \"/\" delimiter. Refer to Chapter 8.\n\nUDS\nis a user-defined sequence with a maximum length of 255 bytes, which must be\nwritten in Hex format for DEC/ANSI terminals. Each hex code in this string\nrepresents a value transmitted by the defined key combined with the modifiers.\n\n\nUDS in DECPFK is functionally equivalent to the string Stn in the DECUDK\ncontrol function.\nSee DECUDK&#8212;User Defined Keys.\n\n\nDir (UDS Direction)\nthe user-defined sequence (UDS) direction of the transmission.\n\n\n\n\n\n\n\nDir\nDirection\nUDS is sent to . . .\n\n\n\n\n0, none\nNormal\nHost and/or the terminal, depending on the setting of the\nCOMM mode parameter. The UDS is directed to:\n\nThe host for full-duplex mode.\nThe screen for half-duplex mode.\n\n\n\n1\nLocal\nTerminal screen only.\n\n\n2\nRemote\nHost only.\n\n\n\n\nDefault: None (Normal)\n\nDescription\n\nAny of the following four methods may be used to define a key to transmit a\nuser-defined sequence (either single byte or multiple bytes):\n\n\nControl function DECPFK\nControl function DECPAK\nControl function DECUDK\nIn Set-Up, Define key ...\n\n\nOnce programmed, the key state is not effected by the terminal mode changes\nlisted below:\n\n\nKeyboard mode change, such as switching between Data Processing mode and\nTypewriter mode\nCharacter Mode change, such as switching between 7-bit character and 8-bit\ncharacter\nKeyboard Layout change, such as switching between PC layout and VT layout\nKeyboard Style change, such as switching between PC-style and VT-style\nTerminal Mode change, such as switching between VT modes\n\n\nThis function works in all the ANSI VT modes except VT52 mode."
    },
    {
        "code": "DECPKA",
        "name": "Program Key Action",
        "parameters": {
            "If set to \"1,\" the parameter determines whether the keys will be locked. Any": "attempt to program keys will be invalid.",
            "If the keys are not locked, then the keys are available for further definition": "either through Set-Up or control functions DECPFK, DECPAK, DECCKD, and\nDECUDK. But if \"Lock UDK\" is enabled by DECUDK, then the attempt to\nprogram the keys does not take effect. (Refer to DECUDK&#8212;User Defined Keys\nfor details.)",
            "If the parameter Ps is set to 2, then all the keys and keys/modifiers combination": "restore to their factory default states. Refer to DECCKD&#8212;Copy Key Default if\nrestoring defaults for a single key and key/modifier combination.",
            "Once locked, keys can only be unlocked through Set-Up. There is no host control": "function that can unlock the keys.",
            "If the parameter Ps is set to 3, all saved settings of the keys and keys/modifiers": "combination are recalled from the NVR."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "+",
                    "z"
                ],
                [
                    "9B",
                    "3n",
                    "2B",
                    "7A"
                ]
            ]
        ],
        "default": null,
        "short": "Allow changes to programmable keys, which affects all the keys on the keyboard\nin all the VT modes except in VT52 mode.",
        "description": ""
    },
    {
        "code": "DECPKFMR",
        "name": "Program Key Free Memory Report",
        "parameters": {
            "Ps2": "denotes the memory space that is available at the time DECRQPKFM is received,\ndepending on the number of bytes left in decimal format. A \"0\" indicates that no\nmemory is left for any key programming operation; in which case, any attempt to\nprogram the keys will fail.",
            "1": "The VT510 reports this sequence upon receiving DECRQPKFM from the host."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    "+",
                    "y"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "2B",
                    "79"
                ]
            ]
        ],
        "default": null,
        "short": "Report the approximate free memory space for program key operations.",
        "description": "The VT510 reports this sequence upon receiving DECRQPKFM from the host.\n\nNote on DECPKFMR\n\nThe free bytes reported by Ps2 in this command represents only the approximate\namount of memory available, because additional memory is used by the firmware\ndata structure to program the key definitions."
    },
    {
        "code": "DECRARA",
        "name": "Reverse Attributes in Rectangular Area",
        "parameters": {
            "0": "Available in: VT Level 4 mode only",
            "3": "DECRARA ignores all other parameter values.",
            "6": "CSI ; ; ; ; 0; 4; 5; $t",
            "The following sequence reverses the blink and underscore attributes of the": "complete screen:",
            "Pt, Pl, Pb, and Pr": "define the rectangular area to be reversed.",
            "The following sequence reverses all attributes except the blink attribute, from": "position line 10, column 2 to position line 14, column 45 on the current page:",
            "When you use more than one parameter in a command, DECRARA executes them": "cumulatively in sequence.",
            "Ps1; . . . Psn": "select the visual character attributes to reverse. These values correspond to the\nvalues used in the select graphic rendition (SGR) function."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pt; Pl; Pb; Pr;",
                    "Ps1; . . . Psn",
                    "$",
                    "t"
                ],
                [
                    "9B",
                    "area to be reversed",
                    "attributes to reverse",
                    "24",
                    "74"
                ]
            ]
        ],
        "default": null,
        "short": "This control function lets you reverse the visual character attributes (bold, blink,\nreverse video, and underline) of a specified rectangular area in page memory. The\nselect attribute change extent (DECSACE) control function determines whether\nall or some of the character positions in the rectangle are affected.",
        "description": ""
    },
    {
        "code": "DECRC",
        "name": "Restore Cursor",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "8"
                ],
                [
                    "1B",
                    "38"
                ]
            ]
        ],
        "default": null,
        "short": "Restores the terminal to the state saved by the save cursor (DECSC) function.",
        "description": "If nothing was saved by DECSC, then DECRC performs the following actions:\n\n\nMoves the cursor to the home position (upper left of screen).\nResets origin mode (DECOM).\nTurns all character attributes off (normal setting).\nMaps the ASCII character set into GL, and the DEC Supplemental Graphic\nset into GR.\n\n\nNotes on DECSC and DECRC\n\nThe terminal maintains a separate DECSC buffer for the main display and the\nstatus line. This feature lets you save a separate operating state for the main\ndisplay and the status line."
    },
    {
        "code": "DECRLCM",
        "name": "Right-to-Left Copy",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "6",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "36",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "9",
                    "6",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "39",
                    "36",
                    "6C"
                ]
            ]
        ],
        "default": "Disable right-to-left-copy",
        "short": "Perform a copy/paste from right-to-left or from left-to-right.",
        "description": "When operating in Copy/Paste, you can paste the copied text according to the\ndirection assigned in this command sequence.\n\nIf right-to-left copy is selected, then the text is stored in the paste buffer starting\nfrom right-to-left. For example if \"ABCD\" is to be copied right-to-left, when a\nPaste key is pressed, the string is saved in the paste buffer as \"DCBA.\" Thus, the\ntext is displayed as \"DCBA\"."
    },
    {
        "code": "DECRLM",
        "name": "Cursor Right to Left Mode",
        "parameters": {
            "0": "The next character position is defined as the current cursor position minus 1.",
            "1": "If the terminal is in Replace mode (IRM is reset), then:",
            "2": "If terminal is in Insert mode (IRM is set), then:",
            "3": "The following escape sequences are not affected by the DECRLM setting:"
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "4",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "44",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "3",
                    "4",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "33",
                    "44",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function starts/stops the right-to-left cursor direction.",
        "description": "DECRLM state is common to both the main display and the status line display.\nThe status line is effected only when you set it to Host Writable Status Display\nin the Display Set-Up screen. DECRLM does not affect column numbering within\nthe line. The first line column is always at the left side of the display window.\nThe last column is always at the right side of the display window.\n\nThe next character position is defined as the current cursor position minus 1.\n\nIf the terminal is in Replace mode (IRM is reset), then:\n\n\nThe new character is inserted in the current cursor position.\nThe cursor moves to the next character position.\n\n\nIf terminal is in Insert mode (IRM is set), then:\n\n\nAll characters from the current cursor position to the left margin inclusively\nare shifted one position towards the left.\nThe character previously displayed at the left margin disappears.\nThe new character is inserted in the current cursor position.\nThe cursor moves to the next character position.\n\n\nThe following escape sequences are not affected by the DECRLM setting:\n\n\n\n\nICH - Insert Character\nDCH - Delete Character\nED - Erase in Display\nEL - Erase in Line\nDECSED - Selective Erase in Display\nDECSEL - Selective Erase in Line\nECH - Erase Character\n\n\n\n\nThe following escape sequences are not affected by the DECRLM setting:\n\n\n\n\nCUP - Cursor Position\nHVP - Horizontal and Vertical Position\nCUF - Cursor Forward\nCUB - Cursor Backward\n\n\n\n\nNotes on DECRLM\n\n\nThe BS control character increases the current cursor position by one, thus\nmoving the cursor on the screen one position to the right.\nWhen new line mode (LNM) is set and the terminal receives one of the control\ncodes LF, VT, or FF, the cursor moves to the last right-most column of the\nnext line.\nWhen control code CR is received, the cursor moves to the last right-most\ncolumn of the current line.\nWhen control code SUB is received, a number of cancellation activities result\nwithin the terminal and the terminal displays an error character, according to\nthe current DECRLM setting.\nWhen control code NEL is received, the cursor moves to the last right-most\ncolumn of the next line. If the cursor is at the bottom margin, then the page\nscrolls up.\nIf auto-wrap is enabled (DECAWM is set), then a graphic character received\nwhen the cursor is at column number one appears at the right margin column\nof the next line. If the cursor is at the end of the scrolling region, then any\ntext already on the page scrolls up.\n"
    },
    {
        "code": "DECRPAK",
        "name": "Report All Modifiers/Alphanumeric Key State",
        "parameters": {},
        "format": [
            [
                [
                    "DCS",
                    "\"",
                    "~",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "22",
                    "7E",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "This control string is in response to a Request Key Definition (DECRQKD).",
        "description": "String D...D has a format same as DECPAK.\n\nParameters\n\nD ... D\nSee DECPAK for a description of parameters."
    },
    {
        "code": "DECRPDE",
        "name": "Report Displayed Extent",
        "parameters": {
            "Pml": "is the column number displayed in the left-most column.",
            "Pmt": "is the line number displayed in the top line.",
            "Ph": "is the number of lines of the current page displayed excluding the status line.",
            "Pw": "is the number of columns of the current page displayed."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ph",
                    ";",
                    "Pw",
                    ";",
                    "Pml",
                    ";",
                    "Pmt",
                    ";",
                    "Pmp",
                    ";",
                    "\"",
                    "w"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "22",
                    "77"
                ]
            ]
        ],
        "default": null,
        "short": "The terminal sends this control function in response to a request displayed extent\n(DECRQDE) sequence. DECRPDE indicates how much of the current page is\ndisplayed on the screen.",
        "description": ""
    },
    {
        "code": "DECRPFK",
        "name": "Report Function Key Definition",
        "parameters": {},
        "format": [
            [
                [
                    "DCS",
                    "\"",
                    "}",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "22",
                    "7D",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "The terminal reports a function key's definition when it receives a DECRQKD.\nDECRPFK denotes a local function number or a defined sequence, that the target\nkey, which is combined with a specific modifier key, performs or transmits.",
        "description": ""
    },
    {
        "code": "DECRPKT",
        "name": "Report Key Type",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    ",",
                    "v"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "2C",
                    "76"
                ]
            ]
        ],
        "default": null,
        "short": "DECRPKT (from the terminal) is a response to a key type inquiry (DECRQKT).",
        "description": ""
    },
    {
        "code": "DECRPM",
        "name": "Report Mode - Terminal To Host",
        "parameters": {
            "Ps": "indicates the setting of the mode. The Ps values are the same for the ANSI and\nDEC versions.",
            "11": "The terminal can only report on one mode at a time.",
            "5": "The following sequence reports the setting of a DEC mode:",
            "6": "The following sequences report the setting for some modes:",
            "1": "There are two versions of DECRPM, for ANSI and DEC modes.",
            "8": "CSI Ps1; Ps2 $ y (or CSI ? Ps1; Ps2 $ y) (Report Mode)",
            "9": "CSI P1.....Pn l (Reset Mode)",
            "10": "CSI P1.....Pn h (Set Mode)",
            "7": "CSI Ps $ p (or CSI ? Ps $ p (DEC)) (Request Mode)",
            "Pa": "Table 5&#8211;6 lists the values for Pa.",
            "Pd": "indicates which DEC mode the terminal is reporting on. Table 5&#8211;6 lists the\nvalues for Pd.",
            "This operation is useful for applications that need to temporarily change some of": "the terminal's mode settings. When the application is finished, it can restore the\nmode settings that were in effect before the application changed them. You use\nthe set mode (SM) and reset mode (RM) functions to restore mode settings. SM\nand RM are described later in this chapter."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pa",
                    ";",
                    "Ps",
                    "$",
                    "y",
                    "CSI",
                    "?",
                    "Pd",
                    ";",
                    "Ps",
                    "$",
                    "y"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "24",
                    "79",
                    "9B",
                    "3F",
                    "3n",
                    "3B",
                    "3n",
                    "24",
                    "79"
                ]
            ]
        ],
        "default": null,
        "short": "Reports the terminal mode in response to a request mode (DECRQM) function. In\nthe response DECRPM informs the host if a certain mode is set (SM\u2014Set Mode)\nor reset (RM\u2014Reset Mode).",
        "description": "DECRQM, DECRPM, SM, and RM support all the mode settings as follows:\n\n\nTable 5&#8211;6 Settings Supported by DECRQM, DECRPM, RM, and SM\n\n\n\n\n\n\nANSI Mode\nDEC Mode\n\n\nPa\nMnemonic\nPd\nMnemonic\n\n\n\n\n*This mode is always reset in the terminal and cannot be changed.\n&#8224;When the terminal is set to VT52 mode, DECRQM provides no report.\n\n\n\n\n1\nGATM*\n?1\nDECCKM\n\n\n2\nKAM\n?2\nDECANM&#8224;\n\n\n3\nCRM\n?3\nDECOLM\n\n\n4\nIRM\n?4\nDECSCLM\n\n\n5\nSRTM*\n?5\nDECSCNM\n\n\n\n\n?6\nDECOM\n\n\n7\nVEM*\n?7\nDECAWM\n\n\n\n\n?8\nDECARM\n\n\n10\nHEM*\n&#8211;\n&#8211;\n\n\n11\nPUM*\n&#8211;\n&#8211;\n\n\n12\nSRM\n&#8211;\n&#8211;\n\n\n13\nFEAM*\n&#8211;\n&#8211;\n\n\n14\nFETM*\n&#8211;\n&#8211;\n\n\n15\nMATM*\n&#8211;\n&#8211;\n\n\n16\nTTM*\n&#8211;\n&#8211;\n\n\n17\nSATM*\n&#8211;\n&#8211;\n\n\n18\nTSM*\n?18\nDECPFF\n\n\n19\nEBM*\n?19\nDECPEX\n\n\n20\nLNM\n&#8211;\n&#8211;\n\n\n&#8211;\n&#8211;\n?25\nDECTCEM\n\n\n&#8211;\n&#8211;\n?34\nDECRLM\n\n\n&#8211;\n&#8211;\n?35\nDECHEBM\n\n\n&#8211;\n&#8211;\n?36\nDECHEM\n\n\n&#8211;\n&#8211;\n?42\nDECNRCM\n\n\n&#8211;\n&#8211;\n?57\nDECNAKB\n\n\n&#8211;\n&#8211;\n?60\nDECHCCM *\n\n\n&#8211;\n&#8211;\n?61\nDECVCCM\n\n\n&#8211;\n&#8211;\n?64\nDECPCCM\n\n\n&#8211;\n&#8211;\n?66\nDECNKM\n\n\n&#8211;\n&#8211;\n?67\nDECBKM\n\n\n&#8211;\n&#8211;\n?68\nDECKBUM\n\n\n&#8211;\n&#8211;\n?69\nDECLRMM (DECVSSM)\n\n\n&#8211;\n&#8211;\n?73\nDECXRLMM\n\n\n&#8211;\n&#8211;\n?95\nDECNCSM\n\n\n&#8211;\n&#8211;\n?96\nDECRLCM\n\n\n&#8211;\n&#8211;\n?97\nDECCRTSM\n\n\n&#8211;\n&#8211;\n?98\nDECARSM\n\n\n&#8211;\n&#8211;\n?99\nDECMCM\n\n\n&#8211;\n&#8211;\n?100\nDECAAM\n\n\n&#8211;\n&#8211;\n?101\nDECCANSM\n\n\n&#8211;\n&#8211;\n?102\nDECNULM\n\n\n&#8211;\n&#8211;\n?103\nDECHDPXM\n\n\n&#8211;\n&#8211;\n?104\nDECESKM\n\n\n&#8211;\n&#8211;\n?106\nDECOSCNM\n\n\n"
    },
    {
        "code": "DECRPSS",
        "name": "Report Selection or Setting",
        "parameters": {
            "The host requests the setting of the select graphic rendition (SGR) function.": "If the current graphic rendition is underline, blinking, and reverse, then the\nterminal responds with the following DECRPSS sequence:",
            "Ps": "indicates whether or not the request from the host is valid.",
            "4": "DCS 0 $ r 0 ; 4 ; 5 ; 7 m ST",
            "5": "0 ; 4 ; 5 ; 7 m are all the characters in the SGR sequence, except CSI.",
            "7": "DCS 0 $ r 1 ; 24 r ST",
            "8": "1 ; 24 r are all the characters in the DECSTBM sequence, except CSI.",
            "The terminal does not send a data string (D...D) to the host when the terminal": "receives an invalid request.",
            "10": "DCS 1 $ r ST",
            "D ... D": "indicates the current setting of a valid control function that the host asked about.\nD...D consists of all the characters in the control function, except the CSI (9/11) or\nESC [ (1/11, 5/11) introducer characters.",
            "The host requests the setting of a function that the terminal does not recognize.": "The terminal responds with the following DECRPSS sequence:",
            "The host requests the setting of the set top and bottom margin function": "(DECSTBM). If the current top and bottom margins are set to include the\ncomplete screen area (24 lines/screen), then the terminal responds with the\nfollowing DECRPSS sequence:",
            "This operation is useful for applications that need to temporarily change the": "settings of some of the terminal's control functions. When the application is\nfinished, it can restore the control functions to their previous state."
        },
        "format": [
            [
                [
                    "DCS",
                    "Ps",
                    "$",
                    "r",
                    "D ... D",
                    "ST"
                ],
                [
                    "90",
                    "3n",
                    "24",
                    "72",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "The terminal sends the host this sequence in response to a request selection or\nsetting (DECRQSS) sequence. The terminal sends DECRPSS to report the setting\nof a particular control function.",
        "description": ""
    },
    {
        "code": "DECRPTUI",
        "name": "Report Terminal Unit ID",
        "parameters": {},
        "format": [
            [
                [
                    "DCS",
                    "!",
                    "|",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "21",
                    "7C",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "DECRPTUI is a response from the terminal to a tertiary DA (DA3) request from\nthe host. DECRPTUI is available in VT Level 4 mode only. See DA3 for more\ninformation.",
        "description": ""
    },
    {
        "code": "DECRQCRA",
        "name": "Request Checksum of Rectangular Area",
        "parameters": {
            "Pp": "is the page number that has the rectangular area. If Pp is 0 or omitted, then the\nterminal ignores the following parameters and reports a checksum for all pages\nin page memory. If Pp is a higher number than the number of pages available,\nthen the terminal reports on the last page.",
            "Pt;Pl;Pb;Pr": "are the top, left, bottom, and right borders of the rectangular area. Pt and Pb\nare line numbers. Pt must be less than or equal to Pb. Pl and Pr are column\nnumbers. Pl must be less than or equal to Pr.",
            "Defaults are Pt = 1, Pb = current page length, Pr = current page width. If these": "parameters are omitted, then the terminal returns a checksum of page Pp."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pid",
                    ";",
                    "Pp",
                    ";",
                    "Pt;Pl;Pb;Pr",
                    "*",
                    "y"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n . . . 3n",
                    "2A",
                    "79"
                ]
            ]
        ],
        "default": null,
        "short": "This control function requests a checksum of the specified rectangular area in the\nspecified page. The terminal returns a checksum report (DECCKSR) in response\nto this request.",
        "description": ""
    },
    {
        "code": "DECRQDE",
        "name": "Request Displayed Extent",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "\"",
                    "v"
                ],
                [
                    "9B",
                    "22",
                    "76"
                ]
            ]
        ],
        "default": null,
        "short": "The host sends a DECRQDE to the terminal requesting how much of the current\npage is displayed on the screen for the active session.",
        "description": ""
    },
    {
        "code": "DECRQKD",
        "name": "Request Key Definition",
        "parameters": {
            "Ps1": "indicates is the target key's station number. When inquiring for an alphanumeric\nkey definition, Ps2 is ignored by the terminal. DECRPAK always reports\na hexadecimal string in which each hexadecimal code represents a value\ntransmitted by pressing a combination of the target key and a modifier key. The\nwhole sequence is ignored if you enter an invalid key/modifier. See DECRPAK."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    ",",
                    "w"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "2C",
                    "77"
                ]
            ]
        ],
        "default": null,
        "short": "DECRQKD allows you to inquire about the terminal's definition of:",
        "description": ""
    },
    {
        "code": "DECRQKT",
        "name": "Key Type Inquiry",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    ",",
                    "u"
                ],
                [
                    "9B",
                    "3n",
                    "2C",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "The host issues a DECRQKT to the terminal for the key definition of a function\nor alphanumeric key. Upon receiving the request, the terminal reports using\nDECRPKT.",
        "description": ""
    },
    {
        "code": "DECRQM",
        "name": "Request Mode - Host To Terminal",
        "parameters": {
            "2": "The following sequences request the setting of some ANSI modes:",
            "Pa": "indicates the ANSI mode that the host is asking about. Table 5&#8211;7 lists the values\nfor Pa.",
            "Pd": "indicates the DEC mode the host is asking about. Table 5&#8211;8 lists the values for\nPd."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pa",
                    "$",
                    "p",
                    "CSI",
                    "?",
                    "Pd",
                    "$",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "70",
                    "9B",
                    "3F",
                    "3n",
                    "24",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "The host sends this control function to find out if a particular mode is set or reset.\nThe terminal responds with a report mode function (DECRPM\u2014Report Mode - Terminal\nTo Host).",
        "description": ""
    },
    {
        "code": "DECRQPKFM",
        "name": "Program Key Free Memory Inquiry",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "+",
                    "x"
                ],
                [
                    "9B",
                    "2B",
                    "78"
                ]
            ]
        ],
        "default": null,
        "short": "Inquire as to the amount of free memory for programmable key operations.",
        "description": "Upon receiving of this sequence, the terminal responds with DECPKFMR."
    },
    {
        "code": "DECRQPSR",
        "name": "Request Presentation State Report",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "w"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "77"
                ]
            ]
        ],
        "default": null,
        "short": "The host sends this sequence to request a cursor information report (DECCIR) or\ntabulation stop report (DECTABSR).",
        "description": ""
    },
    {
        "code": "DECRQSS",
        "name": "Request Selection or Setting",
        "parameters": {},
        "format": [
            [
                [
                    "DCS",
                    "$",
                    "q",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "24",
                    "71",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "The host requests the terminal setting. See DECRPSS for the terminal's\nresponse.",
        "description": "DECRQSS (and DECRPSS) support the following settings or selections:\n\n\n\n\n\n\n\nSetting\nMnemonic\nFinal Character(s)\n\n\n\n\nSelect Active Status Display\nDECSASD\n$ }\n\n\nSelect Attribute Change Extent\nDECSACE\n* x\n\n\nSet Character Attribute\nDECSCA\n\" q\n\n\nSet Conformance Level\nDECSCL\n\" p\n\n\nSet Columns Per Page\nDECSCPP\n$ |\n\n\nSet Lines Per Page\nDECSLPP\nt\n\n\nSet Number of Lines per Screen\nDECSNLS\n* |\n\n\nSet Status Line Type\nDECSSDT\n$ ~\n\n\nSet Left and Right Margins\nDECSLRM\ns\n\n\nSet Top and Bottom Margins\nDECSTBM\nr\n\n\nSet Graphic Rendition\nSGR\nm\n\n\nSelect Set-Up Language\nDECSSL\np\n\n\nSelect Printer Type\nDECSPRTT\n$ s\n\n\nSelect Refresh Rate\nDECSRFR\n\" t\n\n\nSelect Digital Printed Data Type\nDECSDPT\n( p\n\n\nSelect ProPrinter Character Set\nDECSPPCS\n* p\n\n\nSelect Communication Speed\nDECSCS\n* r\n\n\nSelect Communication Port\nDECSCP\n* u\n\n\nSet Scroll Speed\nDECSSCLS\nSP p\n\n\nSet Cursor Style\nDECSCUSR\nSP q\n\n\nSet Key Click Volume\nDECSKCV\nSP r\n\n\nSet Warning Bell Volume\nDECSWBV\nSP t\n\n\nSet Margin Bell Volume\nDECSMBV\nSP u\n\n\nSet Lock Key Style\nDECSLCK\nSP v\n\n\nSelect Flow Control Type\nDECSFC\n* s\n\n\nSelect Disconnect Delay Time\nDECSDDT\n$ q\n\n\nSet Transmit Rate Limit\nDECSTRL\n\" u\n\n\nSet Port Parameter\nDECSPP\n+ w\n\n\n"
    },
    {
        "code": "DECRQTSR",
        "name": "Request Terminal State Report",
        "parameters": {
            "0": "DCS 1 $ S D . . . D ST"
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "u"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "The host requests the terminal to report its state. The terminal reports\n(DECTSR) by indicating the setting of many device attributes. See DECTSR.",
        "description": ""
    },
    {
        "code": "DECRQUPSS",
        "name": "User-Preferred Supplemental Set",
        "parameters": {
            "The host requests the current user-preferred supplemental set by sending the": "following sequence:"
        },
        "format": [
            [
                [
                    "CSI",
                    "&amp;",
                    "u"
                ],
                [
                    "9B",
                    "26",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "Applications can ask for the current user-preferred supplemental set. The\nterminal responds with the user-preferred supplemental set (DECAUPSS)\nsequence.",
        "description": ""
    },
    {
        "code": "DECRSPS",
        "name": "Restore Presentation State",
        "parameters": {
            "Ps": "indicates the format of the data string (D . . . D). You can use one of the two\nfollowing formats for the data string. These formats correspond to the formats\nused in the two presentation state reports (DECPSR). Make sure you use the\nformat of the report you are restoring.",
            "The following DECRSPS sequence restores tab stops according to the tab stop": "report (DECTABSR):",
            "4": "DCS 2 $ t 9/ 17/ 25/ 33/ 41/ 49/ 57/ 65/ 73 ST",
            "D ... D": "is a data string that contains the restored information. This string is identical to\nthe data string used in the report you are restoring&#8211; Cursor Information Report\n(DECCIR) or Tab Stop Report (DECTABSR).",
            "Programming Tip": "Applications can use DECRSPS to restore the terminal to a previous state\nspecified in a presentation state report. See the previous \"Cursor Information\nReport (DECCIR)\" section in this chapter."
        },
        "format": [
            [
                [
                    "DCS",
                    "Ps",
                    "$",
                    "t",
                    "D ... D",
                    "ST"
                ],
                [
                    "90",
                    "3n",
                    "24",
                    "74",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function restores the terminal to a previous state based on one of the\npresentation state reports. There are two presentation state reports.",
        "description": ""
    },
    {
        "code": "DECRSTS",
        "name": "Restore Terminal State",
        "parameters": {
            "Ps": "indicates the format of the data string (D . . . D)."
        },
        "format": [
            [
                [
                    "DCS",
                    "Ps",
                    "$",
                    "p",
                    "D . . . D",
                    "ST"
                ],
                [
                    "90",
                    "3n",
                    "24",
                    "70",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "This sequence restores the terminal to a previous state specified in a terminal\nstate report (DECTSR).",
        "description": ""
    },
    {
        "code": "DECSACE",
        "name": "Select Attribute Change Extent",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "*",
                    "x"
                ],
                [
                    "9B",
                    "3n",
                    "2A",
                    "78"
                ]
            ]
        ],
        "default": null,
        "short": "This control function lets you select which character positions in a rectangle can\nhave their attributes changed or reversed. DECSACE controls the effect of two\nother functions\u2014change attributes in rectangular area (DECCARA) and reverse\nattributes in rectangular area (DECRARA).",
        "description": ""
    },
    {
        "code": "DECSASD",
        "name": "Select Active Status Display",
        "parameters": {
            "0": "Default: Main display"
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "}"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "7D"
                ]
            ]
        ],
        "default": "Main display",
        "short": "DECSASD selects whether the terminal sends data to the main display or the\nstatus line.",
        "description": ""
    },
    {
        "code": "DECSCA",
        "name": "Select Character Protection Attribute",
        "parameters": {
            "Ps": "defines all characters that follow the DECSCA function as erasable or not\nerasable."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "\"",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "22",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "DECSCA defines the characters that come after it as erasable or not erasable\nfrom the screen. The selective erase control functions (DECSED and DECSEL)\ncan only erase characters defined as erasable.",
        "description": ""
    },
    {
        "code": "DECSCLM",
        "name": "Scrolling Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "4",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "34",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "4",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "34",
                    "6C"
                ]
            ]
        ],
        "default": "Smooth scroll",
        "short": "This control function selects the way the terminal scrolls lines. You can select one\nof two scroll settings, smooth or jump.",
        "description": "When DECSLM is set, the terminal adds lines to the screen at a moderate,\nsmooth rate. You can select a slow rate or fast rate in Display Set-Up.\n\nWhen DECSLM is reset, the terminal can add lines to the screen as fast as it\nreceives them."
    },
    {
        "code": "DECSCL",
        "name": "Select Conformance Level",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "You select the terminal's operating level by using the following select conformance\nlevel (DECSCL) control sequences. The factory default is level 4 (VT Level 4\nmode, 7-bit controls).",
        "description": ""
    },
    {
        "code": "DECSCNM",
        "name": "Screen Mode: Light or Dark Screen",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "6C"
                ]
            ]
        ],
        "default": "Dark background",
        "short": "This control function selects a dark or light background on the screen.",
        "description": "When DECSCNM is set, the screen displays dark characters on a light\nbackground.\n\nWhen DECSCNM is reset, the screen displays light characters on a dark\nbackground.\n\nNote on DECSCNM\n\nScreen mode only effects how the data appears on the screen. DECSCNM does\nnot change the data in page memory."
    },
    {
        "code": "DECSCPP",
        "name": "Select 80 or 132 Columns per Page",
        "parameters": {},
        "format": [],
        "default": "80 columns",
        "short": "There are two control functions that can set the page width to 80 or 132 columns,\nDECSCPP and DECCOLM (DECCOLM\u2014Select 80 or 132 Columns per Page).",
        "description": ""
    },
    {
        "code": "DECSCP",
        "name": "Select Communication Port",
        "parameters": {
            "Ps2": "indicates the port selection for a host connection. Since the VT510 is a single\nsession terminal, the host session can connect to the Comm1 port or the Comm2\nport."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    "*",
                    "u"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "2A",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "Select the port to be used for printer or host connection.",
        "description": ""
    },
    {
        "code": "DECSCS",
        "name": "Select Communication Speed",
        "parameters": {
            "Ps2": "indicates the communication speed."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    "*",
                    "r"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "2A",
                    "72"
                ]
            ]
        ],
        "default": null,
        "short": "Select a communication speed for a communication line.",
        "description": ""
    },
    {
        "code": "DECSCUSR",
        "name": "Set Cursor Style",
        "parameters": {
            "This sequence causes the cursor to be displayed in a different style when the": "cursor is enabled."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "Select the style of the cursor on the screen.",
        "description": ""
    },
    {
        "code": "DECSC",
        "name": "Save Cursor",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "7"
                ],
                [
                    "1B",
                    "37"
                ]
            ]
        ],
        "default": null,
        "short": "Saves the following items in the terminal's memory:",
        "description": "Saves the following items in the terminal's memory:\n\n\nCursor position\nCharacter attributes set by the SGR command\nCharacter sets (G0, G1, G2, or G3) currently in GL and GR\nWrap flag (autowrap or no autowrap)\nState of origin mode (DECOM)\nSelective erase attribute\nAny single shift 2 (SS2) or single shift 3 (SS3) functions sent\n"
    },
    {
        "code": "DECSDDT",
        "name": "Select Disconnect Delay Time",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "Select an appropriate disconnect delay time.",
        "description": "The disconnect delay feature determines the time allowed before the terminal\ndisconnects from the communications line when the Received Line Signal Detect\n(RLSD) is lost.\n\nAll countries except the United Kingdom should use the 2 seconds delay. The 60\nms delay is for use in the United Kingdom.\n\nIf the terminal detects a loss of carrier and if the user has selected \"no\ndisconnect,\" then the terminal ignores RLSD (CD) after the beginning of the\nconnection.\n\nIf the user tries to disconnect and reconnect the line, then the terminal checks\nif RLSD is asserted before granting the connection. Once it is connected, the\nterminal ignores the loss of carrier. In this case, the disconnect should be done on\nDSR going off."
    },
    {
        "code": "DECSDPT",
        "name": "Select Digital Printed Data Type",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    ")",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "29",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "Allow users to match the characters printed to the character sets the DEC ANSI\nconforming printer is capable of supporting.",
        "description": "This sequence takes effect only when a ProPrinter or DEC printer with ProPrinter\nemulation mode is attached."
    },
    {
        "code": "DECSED",
        "name": "Selective Erase in Display",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "Ps",
                    "J"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "4A"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases some or all of the erasable characters in the display.\nDECSED can only erase characters defined as erasable by the DECSCA control\nfunction. DECSED works inside or outside the scrolling margins.",
        "description": ""
    },
    {
        "code": "DECSEL",
        "name": "Selective Erase in Line",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "Ps",
                    "K"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "4B"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases some or all of the erasable characters in a single line\nof text. DECSEL erases only those characters defined as erasable by the DECSCA\ncontrol function. DECSEL works inside or outside the scrolling margins.",
        "description": ""
    },
    {
        "code": "DECSERA",
        "name": "Selective Erase Rectangular Area",
        "parameters": {
            "0": "Available in: VT Level 4 mode only"
        },
        "format": [
            [
                [
                    "CSI",
                    "Pt",
                    ";",
                    "Pl",
                    ";",
                    "Pb",
                    ";",
                    "Pr",
                    "$",
                    "{"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "24",
                    "7B"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases all erasable characters from a specified rectangular\narea in page memory. The select character protection attribute (DECSCA) control\nfunction defines whether or not DECSERA can erase characters.",
        "description": ""
    },
    {
        "code": "DECSFC",
        "name": "Select Flow Control",
        "parameters": {
            "Ps2": "indicates the flow method. On the VT510, the transmit side or the receive side of\nthe communication line can select different or the same flow control methods.",
            "Ps3": "is for the flow control type. When the terminal is in PCTerm mode, XPC replaces\nXON/XOFF on the receive side.",
            "3": "The terminal uses \"low\" and \"high\" to denote the flow control threshold.",
            "Ps4": "sets the flow control threshold."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    ";",
                    "Ps3",
                    ";",
                    "Ps4",
                    "*",
                    "s"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "2A",
                    "73"
                ]
            ]
        ],
        "default": null,
        "short": "Select a flow control scheme for the communication port or printer port.",
        "description": ""
    },
    {
        "code": "DECSKCV",
        "name": "Set Key Click Volume",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "r"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "72"
                ]
            ]
        ],
        "default": null,
        "short": "Set the keyclick volume.",
        "description": ""
    },
    {
        "code": "DECSLCK",
        "name": "Set Lock Key Style",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "v"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "76"
                ]
            ]
        ],
        "default": null,
        "short": "Allow user to select a Lock key style.",
        "description": ""
    },
    {
        "code": "DECSLPP",
        "name": "Set Lines Per Page",
        "parameters": {
            "If the number of lines specified is not one of the values supported by the": "implementation, then the next higher supported number of lines per page\nis assumed. If the number of lines specified exceeds the maximum number\nsupported, then the maximum number supported is used. The valid Pn values\nare 24, 25, 36, 41, 42, 48, 52, 53, and 72.",
            "Pn": "Sets the lines per page according to the numeric parameter."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "t"
                ],
                [
                    "9B",
                    "3n",
                    "74"
                ]
            ]
        ],
        "default": "One session\u20146 pages of 24 lines",
        "short": "This control function sets the number of lines for each page in page memory.",
        "description": "If the number of lines specified is not one of the values supported by the\nimplementation, then the next higher supported number of lines per page\nis assumed. If the number of lines specified exceeds the maximum number\nsupported, then the maximum number supported is used. The valid Pn values\nare 24, 25, 36, 41, 42, 48, 52, 53, and 72.\n\nThe VT510 supports three pages of off-screen memory in the following\nconfigurations:\n\n\n3 pages &#215; 24 lines (default)\n2 pages &#215; 25 lines\n2 pages &#215; 36 lines\n1 pages &#215; 41 lines\n1 pages &#215; 42 lines\n1 pages &#215; 48 lines\n1 pages &#215; 52 lines\n1 pages &#215; 53 lines\n1 pages &#215; 72 lines\n\n\nNotes on DECSLPP\n\n\nIf you switch to a smaller page size, then data that was on the larger page\nmay be split across the smaller pages. To avoid confusion, make sure you set\nthe lines/page before you enter data into page memory.\nDECSLPP usually does not change the top and bottom scrolling margins.\nIf, however, you change the page size so that the current scrolling margins\nexceed the new page size, then the terminal resets the margins to the page\nlimits.\n"
    },
    {
        "code": "DECSLRM",
        "name": "Set Left and Right Margins",
        "parameters": {
            "0": "Default: Margins are at the left and right page borders.",
            "Pl": "is the column number for the left margin.\nDefault: Pl = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pl",
                    ";",
                    "Pr",
                    "s"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "73"
                ]
            ]
        ],
        "default": "Margins are at the left and right page borders",
        "short": "This control function sets the left and right margins to define the scrolling region.\nDECSLRM only works when vertical split screen mode (DECLRMM) is set.",
        "description": ""
    },
    {
        "code": "DECSMBV",
        "name": "Set Margin Bell Volume",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "u"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "Set the margin bell volume.",
        "description": "This sequence is used to adjust the warning bell volume, which sounds as the\ncurrent position nears the right margin."
    },
    {
        "code": "DECSMKR",
        "name": "Select Modifier Key Reporting",
        "parameters": {
            "Pfn": "controls the action of the modifier key specified by the corresponding Pmn value."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pm1",
                    ";",
                    "Pf1",
                    "...",
                    "Pmn",
                    ";",
                    "Pfn",
                    "+",
                    "r"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "...",
                    "3n",
                    "3B",
                    "3n",
                    "2B",
                    "72"
                ]
            ]
        ],
        "default": null,
        "short": "Program the modifier keys to send extended keyboard reports when pressed or\nreleased. DECSMKR only works when key position mode (DECKPM) is set.\nApplications can use DECSMKR to gain more control over the keyboard by\nmonitoring the action of each modifier key.",
        "description": "DECSMKR can accept any number of parameter pairs. The terminal executes the\nparameters in the order in which it receives them. Applications cannot change\nthe function of the F5 (Break) key. This restriction is required for secure systems\nto ensure that the operator has control of the communication line."
    },
    {
        "code": "DECSNLS",
        "name": "Set Lines Per Screen",
        "parameters": {
            "0": "The terminal has the following valid combinations:",
            "The current combination is 26 lines/72 Hz/Overscan. If you attempt to assign 42": "lines per screen, then the terminal becomes 42 lines/72 Hz/No Overscan.",
            "If an invalid combination is selected, the terminal automatically returns to a": "valid combination according to the following priority order:",
            "The current combination is 42 lines/60 Hz/Overscan. If you attempt to assign 72": "Hz refresh rate, then the terminal becomes 42 lines/72 Hz/No Overscan."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "*",
                    "|"
                ],
                [
                    "9B",
                    "3n",
                    "2A",
                    "7C"
                ]
            ]
        ],
        "default": null,
        "short": "Set the maximum lines that can be displayed on the screen.",
        "description": "The terminal supports three different font heights, which allows 26, 42, or 53\ndata lines to be displayed on the screen or 25, 41, or 52 data lines to be displayed\non the screen, plus a status line. The different character fonts are:\n\n\n\n\n\n\n\n\n\n\n\n\n80/26\n132/26\n80/42\n132/42\n80/53\n132/53\n\n\n\n\nCell Width\n10\n6\n10\n6\n10\n6\n\n\nCell Height\n16\n16\n10\n10\n8\n8\n\n\n\n\nNotes on DECSNLS\n\n\nWhen 26 Line per Screen/72 Hz/Overscan is selected, the cell size changes\nfrom 10&#160;&#215;&#160;16 (6&#160;&#215;&#160;16) to 10&#160;&#215;&#160;13 (6&#160;&#215;&#160;13).\nWhen 42 lines or 53 lines are selected, users can only select either overscan\nfeature or 72 Hz refresh rate, not both.\n\n\nValid Combinations\n\nThe terminal has the following valid combinations:\n\n\n\n\n\n\n\nLines Per Screen\nRefresh Rate\nOverscan\n\n\n\n\n26\n72 Hz\nNo\n\n\n26\n72 Hz\nYes\n\n\n26\n60 Hz\nNo\n\n\n26\n60 Hz\nYes\n\n\n42\n72 Hz\nNo\n\n\n42\n60 Hz\nNo\n\n\n42\n60 Hz\nYes\n\n\n53\n72 Hz\nNo\n\n\n53\n60 Hz\nNo\n\n\n53\n60 Hz\nYes\n\n\n\n\nIf an invalid combination is selected, the terminal automatically returns to a\nvalid combination according to the following priority order:\n\n\nLines Per Screen\nRefresh Rate\nOverscan\n\n\nExamples\n\nThe current combination is 26 lines/72 Hz/Overscan. If you attempt to assign 42\nlines per screen, then the terminal becomes 42 lines/72 Hz/No Overscan.\n\nThe current combination is 42 lines/60 Hz/Overscan. If you attempt to assign 72\nHz refresh rate, then the terminal becomes 42 lines/72 Hz/No Overscan.\n\nThe current combination is 53 lines/72 Hz/No Overscan. Any attempt to enable\nOverscan is invalid."
    },
    {
        "code": "DECSPPCS",
        "name": "Select ProPrinter Character Set",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "*",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "2A",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "Allow users to match the characters printed to the character sets the IBM\nProPrinter is capable of supporting.",
        "description": "This sequence takes affect only when a ProPrinter or DEC printer with\nProPrinter emulation mode is attached."
    },
    {
        "code": "DECSPP",
        "name": "Set Port Parameter",
        "parameters": {
            "Ps2": "determines the data bit.",
            "Ps3": "determines the parity.",
            "2": "Ps3 selections 4 and 5 are not available for the printer port."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    ";",
                    "Ps3",
                    ";",
                    "Ps4",
                    "+",
                    "w"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "3B",
                    "3n",
                    "2B",
                    "77"
                ]
            ]
        ],
        "default": null,
        "short": "Configures communication parameters for either a communication port or a\nprinter port.",
        "description": ""
    },
    {
        "code": "DECSPRTT",
        "name": "Select Printer Type",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "s"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "73"
                ]
            ]
        ],
        "default": null,
        "short": "Allow users to select a printer type that matches their environment.",
        "description": "Printer type \"DEC ANSI\" indicates a printer type that is capable of recognizing\nthe attached Digital ANSI conforming escape sequences.\n\n\"ProPrinter\" indicates an attached printer type that recognizes the IBM\nProPrinter escape sequences.\n\nIf the attached printer is an ANSI-compatible printer that has the IBM\nProPrinter emulation feature, then select \"DEC + IBM.\""
    },
    {
        "code": "DECSRC",
        "name": "Secure Reset Confirmation",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pr",
                    "*",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "2A",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "The terminal returns this report to the host if the ",
        "description": ""
    },
    {
        "code": "DECSRFR",
        "name": "Select Refresh Rate",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "\"",
                    "t"
                ],
                [
                    "9B",
                    "3n",
                    "22",
                    "74"
                ]
            ]
        ],
        "default": null,
        "short": "Selects a refresh rate.",
        "description": "The terminal can be set to refresh its display at the power line frequency in\nelectrically noisy environments. Normally this is unnecessary. The 72 Hz refresh\nrate is preferred to minimize flicker.\n\nBecause of a hardware limitation, overscan and 72 Hz refresh rate cannot co-exist\nwhen the lines per screen is set to 42 or 53. See DECSNLS for details. If a\ncombination of lines per screen, refresh rate, and overscan become invalid, then\nthe terminal returns to a valid combination in this order of priority:\n\n\nLines Per Screen\nRefresh Rate\nOverscan\n"
    },
    {
        "code": "DECSR",
        "name": "Secure Reset",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pr",
                    "+",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "2B",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "This control function sets the terminal to its power-up state. DECSR lets\napplications know the exact state of the terminal before any attempted\noperations. You can use DECSR to guarantee the terminal state for secure\nconnections. DECSR is similar to RIS, but does not perform a disconnect from\nthe host.",
        "description": ""
    },
    {
        "code": "DECSSCLS",
        "name": "Set Scroll Speed",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "Select how fast lines appear on the screen.",
        "description": "This is a user preference feature. If the User Features Locked is enabled, then\nthe scroll speed cannot be changed by this control function.\n\nThe escape sequence DECSCLM can change the scroll speed between Smooth 2\nand Jump scroll."
    },
    {
        "code": "DECSSDT",
        "name": "Select Status Display (Line) Type",
        "parameters": {
            "0": "Default: Indicator status display"
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "~"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "7E"
                ]
            ]
        ],
        "default": "Indicator status display",
        "short": "This control function lets the host select the type of status line displayed.",
        "description": ""
    },
    {
        "code": "DECSSL",
        "name": "Select Set-Up Language",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "p"
                ],
                [
                    "9B",
                    "3n",
                    "50"
                ]
            ]
        ],
        "default": null,
        "short": "Select one of several languages for Set-Up display menus.",
        "description": ""
    },
    {
        "code": "DECST8C",
        "name": "Set Tab at Every 8 Columns",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "5",
                    "W"
                ],
                [
                    "9B",
                    "3F",
                    "35",
                    "57"
                ]
            ]
        ],
        "default": null,
        "short": "Set a tab stop at every eight columns starting with column 9.",
        "description": "Any tab stop setting before this command is executed is cleared automatically.\nControl function TBC clears the tab stops on the display; HTS sets a horizontal\ntab stop at the active column."
    },
    {
        "code": "DECSTBM",
        "name": "Set Top and Bottom Margins",
        "parameters": {
            "Pt": "is the line number for the top margin.\nDefault: Pt = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pt",
                    ";",
                    "Pb",
                    "r"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "72"
                ]
            ]
        ],
        "default": "Margins are at the page limits",
        "short": "This control function sets the top and bottom margins for the current page. You\ncannot perform scrolling outside the margins.",
        "description": ""
    },
    {
        "code": "DECSTRL",
        "name": "Set Transmit Rate Limit",
        "parameters": {
            "Ps2": "indicates the characters per second.",
            "When enabled, the terminal limits the rate at which it transmits the answerback,": "CPR, DA, TSI, and DSR messages, as well as the keyboard keys, and any other\ncharacters transmitted from the terminal. All messages and keystrokes are\ntransmitted according to the selected \"character per second\" rate.",
            "You can select different transmit rates for graphic keys and function keys, which": "usually transmit more than one byte at a time."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps1",
                    ";",
                    "Ps2",
                    "\"",
                    "u"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "22",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "Limit the rate of character transmission according to the selected rate.",
        "description": "When enabled, the terminal limits the rate at which it transmits the answerback,\nCPR, DA, TSI, and DSR messages, as well as the keyboard keys, and any other\ncharacters transmitted from the terminal. All messages and keystrokes are\ntransmitted according to the selected \"character per second\" rate.\n\nYou can select different transmit rates for graphic keys and function keys, which\nusually transmit more than one byte at a time.\n\nThe transmit rate limit function can be enabled and disabled through the\nDECXRLM control function. When disabled, all messages and keystrokes are\ntransmitted as fast as possible without any delay between characters."
    },
    {
        "code": "DECSTR",
        "name": "Soft Terminal Reset",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "!",
                    "p"
                ],
                [
                    "9B",
                    "21",
                    "70"
                ]
            ]
        ],
        "default": null,
        "short": "Perform a soft reset to the default values listed in ",
        "description": "Table 5&#8211;9 lists the terminal's default settings:\n\n\nTable 5&#8211;9 Terminal's Default Settings\n\n\n\n\n\nMode\nMnemonic\nState after DECSTR\n\n\n\n\nText cursor enable\nDECTCEM\nCursor enabled.\n\n\nInsert/replace\nIRM\nReplace mode.\n\n\nOrigin\nDECOM\nAbsolute (cursor origin at upper-left of screen.)\n\n\nAutowrap\nDECAWM\nNo autowrap.\n\n\nNational replacement character set\nDECNRCM\nMultinational set.\n\n\nKeyboard action\nKAM\nUnlocked.\n\n\nNumeric keypad\nDECNKM\nNumeric characters.\n\n\nCursor keys\nDECCKM\nNormal (arrow keys).\n\n\nSet top and bottom margins\nDECSTBM\nTop margin = 1; bottom margin = page length.\n\n\nAll character sets\nG0, G1, G2, G3, GL, GR\nDefault settings.\n\n\nSelect graphic rendition\nSGR\nNormal rendition.\n\n\nSelect character attribute\nDECSCA\nNormal (erasable by DECSEL and DECSED).\n\n\nSave cursor state\nDECSC\nHome position.\n\n\nAssign user preference supplemental set\nDECAUPSS\nSet selected in Set-Up.\n\n\nSelect active status display\nDECSASD\nMain display.\n\n\nKeyboard position mode\nDECKPM\nCharacter codes.\n\n\nCursor direction\nDECRLM\nReset (Left-to-right), regardless of NVR setting.\n\n\nPC Term mode\nDECPCTERM\nAlways reset.\n\n\n"
    },
    {
        "code": "DECSWBV",
        "name": "Set Warning Bell Volume",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "t"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "74"
                ]
            ]
        ],
        "default": null,
        "short": "Set the warning bell volume.",
        "description": "This sequence is used to adjust the warning bell volume (for errors and receipt of\nCtrl G)."
    },
    {
        "code": "DECSWL",
        "name": "Single-Width, Single-Height Line",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "#",
                    "5"
                ],
                [
                    "1B",
                    "23",
                    "35"
                ]
            ]
        ],
        "default": null,
        "short": "DECSWL makes the line with the cursor a single-width, single-height line. This\nline attribute is the standard for all new lines on the screen.",
        "description": ""
    },
    {
        "code": "DECTABSR",
        "name": "Tab Stop Report",
        "parameters": {
            "3": "DCS 2 $ u 9/ 17/ 25/ 33/ 41/ 49/ 57/ 65/ 73 ST",
            "2": "The following is an example of a DECTABSR sequence:",
            "D...D": "is a data string indicating the column number location of each tab stop.",
            "This operation is useful for applications that need to temporarily change the": "terminal's tab stops. When the application is finished, it can restore the tab\nstops that were in effect before the application changed them. You use the\nrestore presentation state (DECRSPS) function to restore tab stops. Refer to\nDECRSPS&#8212;Restore Presentation State for additional information."
        },
        "format": [
            [
                [
                    "DCS",
                    "2",
                    "$",
                    "u",
                    "D ... D",
                    "ST"
                ],
                [
                    "90",
                    "32",
                    "24",
                    "75",
                    "...",
                    "9C"
                ]
            ]
        ],
        "default": null,
        "short": "The terminal sends this sequence to the host in response to a request\npresentation state report (DECRQPSR) sequence. DECTABSR informs the host\nof the terminal's current tab settings.",
        "description": ""
    },
    {
        "code": "DECTCEM",
        "name": "Text Cursor Enable Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "2",
                    "5",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "32",
                    "35",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "2",
                    "5",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "32",
                    "35",
                    "6C"
                ]
            ]
        ],
        "default": "Visible",
        "short": "This control function makes the cursor visible or invisible.",
        "description": ""
    },
    {
        "code": "DECTID",
        "name": "Select Terminal ID",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    ",",
                    "q"
                ],
                [
                    "9B",
                    "3n",
                    "2C",
                    "71"
                ]
            ]
        ],
        "default": null,
        "short": "Select a terminal ID.",
        "description": "This sequence selects the Primary DA Response (\"Terminal ID\") transmitted by\nthe terminal. DECTID has no effect when the terminal is in VT52 mode.\n\nThe VT510 supports the following DA1 responses:\n\n\n\n\nVT100 ID\nESC [ ? 1; 2 c\n\n\nVT101 ID\nESC [ ? 1; 0 c\n\n\nVT102 ID\nESC [ ? 6 c\n\n\nVT220 ID (N.A.)\nCSI ? 62; 1; 2; 7; 8 c\n\n\nVT220 ID (Intnl)\nCSI ? 62; 1; 2; 7; 8; 9 c\n\n\nVT320 ID (N.A.)\nCSI ? 63; 1; 2; 7; 8 c\n\n\nVT320 ID (Intnl)\nCSI ? 63; 1; 2; 7; 8; 9 c\n\n\nVT420 ID (N.A.)\nCSI ? 64; 1; 2; 7; 8; 9; 15; 18; 21 c\n\n\nVT420 ID (Intnl)\nCSI ? 64; 1; 2; 7; 8; 9; 15; 18; 21 c\n\n\nVT510 ID\nReference function DA1\n\n\n\n\nThe default ID is \"VT510.\""
    },
    {
        "code": "DECTME",
        "name": "Terminal Mode Emulation",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "SP",
                    "~"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "711"
                ]
            ]
        ],
        "default": null,
        "short": "Select a terminal emulation mode.",
        "description": "This sequence allows you to select the terminal emulation mode. After any mode\nchange is made, a soft reset is performed.\n\nNotes on DECTME\n\n\nPrinter operations are not affected or halted by a change in mode.\nA soft reset is always performed as a result of a mode change between VT\nmodes.\nException: Entering VT52 mode using DECANM does not cause a soft reset\nfrom VT100 mode.\nDECANM and DECSCL can also change the VT operating modes.\n"
    },
    {
        "code": "DECTSR",
        "name": "Terminal State Report",
        "parameters": {
            "Response": "DCS 1 $S D . . . D ST\nD ... D\nSee Device Attributes (DA1, DA2, DA3)."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "$",
                    "u"
                ],
                [
                    "9B",
                    "3n",
                    "24",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "Requests and reports the state of the terminal.",
        "description": "DECRQTSR and DECTSR requests and reports the state of the terminal."
    },
    {
        "code": "DECTST",
        "name": "Invoke Confidence Test",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "4",
                    ";",
                    "Ps",
                    "...",
                    ";",
                    "Ps",
                    "y"
                ],
                [
                    "9B",
                    "34",
                    "3B",
                    "3n",
                    "...",
                    "3B",
                    "3n",
                    "79"
                ]
            ]
        ],
        "default": null,
        "short": "Select tests to be performed.",
        "description": "After the first parameter, \"4\", the parameters each select one test. Several\ntests may be invoked at once by chaining the parameters together separated by\nsemicolons. The tests are not necessarily executed in the order in which they are\nentered in the parameter string.\n\n\"ESC # 8\" invokes the Screen Alignment test for the VT510. Additionally, after\nexecuting the power-up selftest, the terminal displays either the diagnostic\nmessages in the upper left corner of the screen or the \"VT510 OK\" message in the\ncenter of the screen and within a box. Upon receipt of any character except XON\nor if the user types a keystroke, the screen is cleared. If the terminal is in local\nmode, then characters from the host are ignored and the message remains visible\neven if characters are received from the host. DECTST causes a disconnect;\ntherefore, it should not be used in conjunction with a modem."
    },
    {
        "code": "DECUDK",
        "name": "User Defined Keys",
        "parameters": {
            "With Ps1 set to 1, keys are cleared and loaded sequentially. If the new definition": "for a key is larger than the old one, then you may exceed the 804 byte limit.",
            "4": "804 (maximum) - 412 ( F6 ) - 366 ( F7 ) = 26",
            "6": "If Ps2 is 1 and the keys are already locked, then nothing happens.",
            "14": "The following sequence clears unshifted UDKs:",
            "For example, suppose F6 contains 412 bytes, F7 contains 366 bytes, and F8": "contains 20 bytes. You try to load F8 with 40 bytes, F6 with one byte, and F7\nwith one byte, in that order. This works if all keys are cleared first (Ps1 is 0), but\nnot if keys are cleared one at a time (Ps1 is 1). When you try to load F8 with 40\nbytes, the load fails because only 26 bytes are free at that time.",
            "16": "The following sequence locks unshifted UDKs:",
            "17": "DCS 1 ; 0 ; 1 | ST",
            "DCS (9/0) indicates the beginning of a device control string. DCS is an 8-bit C1": "character. You can use ESC P (1/11 5/0) for a 7-bit environment.",
            "19": "DCS 1 ; 1 ; 1 | 3 4 /",
            "20": "34 is the code for the F20 key.",
            "22": "5 0 5 2 4 9 4 E 5 4 ST",
            "23": "The hex encoding for \"PRINT\" is as follows:",
            "Suppose you want to define the unshifted F20 key to be \"PRINT\", without clearing": "or locking any other keys. The first part of your sequence would look like this:",
            "When Ps1 is 1, the terminal only clears the keys you are loading. By using a Ps1": "value of 1, you can redefine some keys without redefining them all.",
            "D ... D": "are the key definition strings such as:",
            "You include these strings between the final character ( | ) and the string": "terminator (ST). Each string consists of a key selector number (Kyn), a string\nparameter (Stn), a slash (/) (2/15), and a direction (Dir). A semicolon (;) (3/11)\nseparates different strings.",
            "The terminal uses a special lock to prevent or allow the programming of user-defined": "keys. You can turn on this lock from Set-Up or from the host (with a\nDECUDK device control string). The lock affects all programmable keys. When\nyou use the lock, you should follow these guidelines:",
            "24": "The ST character (9/12) marks the end of the control string:",
            "After the slash character (/) (2/15), you include the definition. The rest of the": "sequence after the slash character would look like this:",
            "15": "DCS 0 ; 1 ; 1 | ST",
            "Programming Tip": "If Ps1 is 1, a key load may fail because no memory space is available. The reason\nfor this is as follows:",
            "ST is the string terminator. ST (9/12) is a C1 8-bit character. You can use ESC \\": "(1/11, 5/12) for a 7-bit environment.",
            "Ps2": "is the lock parameter. Pl determines whether the key definitions are locked or\nunlocked after you load them.",
            "Ps3": "is the modifier parameter. Ps3 designates whether the key is shifted or unshifted.",
            "|": "is the final character. The vertical bar (7/12) identifies this control string as a\nDECUDK."
        },
        "format": [],
        "default": null,
        "short": "DECUDK downloads definitions for user-defined keys.",
        "description": "DCS (9/0) indicates the beginning of a device control string. DCS is an 8-bit C1\ncharacter. You can use ESC P (1/11 5/0) for a 7-bit environment.\n\nST is the string terminator. ST (9/12) is a C1 8-bit character. You can use ESC \\\n(1/11, 5/12) for a 7-bit environment.\n\nGeneral Guidelines When Loading UDKs\n\n\nClear UDK memory space before loading new definitions.\nUse a DECUDK string to clear keys without locking them. Then you can use\nanother DECUDK string to redefine the keys and lock them.\nIf you redefine a key, then the old definition is lost. This clears space if the\nnew definition uses less bytes than the old one.\nThere is only one way to unlock UDKs.\nTo unlock a UDK, use Set-Up.\nWhen you clear a UDK, the key definition is empty.\nAn invalid hex pair in a DECUDK string stops a UDK sequence.\nWhen a load sequence stops (error or other cause), the terminal saves keys\nalready loaded and sends the rest of DECUDK to the screen.\nYou can disable the local function keys by redefining them with DECUDK.\nDECUDK works in all VT modes except VT52 mode.\n\n\nExamples of DECUDK Device Control Strings\n\nThe following sequence clears unshifted UDKs:\n\nDCS 0 ; 1 ; 1 | ST\n\nThe following sequence locks unshifted UDKs:\n\nDCS 1 ; 0 ; 1 | ST\n\nSuppose you want to define the unshifted F20 key to be \"PRINT\", without clearing\nor locking any other keys. The first part of your sequence would look like this:\n\nDCS 1 ; 1 ; 1 | 3 4 /\n\n34 is the code for the F20 key.\n\nAfter the slash character (/) (2/15), you include the definition. The rest of the\nsequence after the slash character would look like this:\n\n5 0 5 2 4 9 4 E 5 4 ST\n\nThe hex encoding for \"PRINT\" is as follows:\n\n\n\n\n50\n=\nP\n\n\n52\n=\nR\n\n\n49\n=\nI\n\n\n4E\n=\nN\n\n\n54\n=\nT\n\n\n\n\nThe ST character (9/12) marks the end of the control string:\n\nDCS 1 ; 1 ; 1 | 34 / 50 52 49 4E 54 ST"
    },
    {
        "code": "DECVCCM",
        "name": "Vertical Cursor-Coupling Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "1",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "31",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "1",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "31",
                    "6C"
                ]
            ]
        ],
        "default": "Coupled",
        "short": "This control function determines whether the user window pans with the cursor\nwhen the cursor moves past the top or bottom border of the user window.\nDECVCCM is only useful when the height of the current user window is smaller\nthan the page. The cursor must stay on the current page.",
        "description": "When DECVCCM is set, the cursor is coupled to the display for vertical\nmovement. When the cursor moves past the top or bottom border of the user\nwindow, the window pans to keep the cursor in view.\n\nIf the cursor moves past the top of the display, the user window pans up. New\nlines appear at the top of the screen, while lines at the bottom move out of view.\n\nWhen DECVCCM is reset, the cursor is uncoupled from the display. If the cursor\nmoves past the top or bottom border of the user window, the cursor disappears."
    },
    {
        "code": "DECXCPR",
        "name": "Extended Cursor Position",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "6",
                    "n"
                ],
                [
                    "9B",
                    "3F",
                    "36",
                    "6E"
                ]
            ]
        ],
        "default": null,
        "short": "The host asks the terminal for the current cursor position, including the current\npage number.",
        "description": ""
    },
    {
        "code": "DECXRLM",
        "name": "Transmit Rate Limiting",
        "parameters": {
            "Using C1 Control Characters": "Using an 8-bit setting for the printer port implies the use of 8-bit C1 control\ncharacters. Using a 7-bit setting implies the use of the 7-bit ESC form of C1\ncontrol characters. You select the setting by using the data bits/parity feature\nin the Printer Set-Up screen.",
            "Any of the following conditions will disconnect the connection to the host system": "in VT mode:",
            "Modem Connection and Disconnections": "When the terminal makes a connection to the host system through a modem,\nthe terminal performs the following operations to ensure it is ready to send and\nreceive.",
            "The usual way to disconnect communications is to type Shift F5 ( Shift Break ). The": "host system's response to the disconnect signal depends on the system and the\nsoftware.",
            "Terminal-to-Printer Data Flow Control": "The terminal sends only data characters to the printer. The terminal does not\nsend XON and XOFF characters. The terminal recognizes only XON and XOFF\ncharacters from the printer. Any other characters from the printer are ignored.",
            "When the terminal receives XOFF from the printer, the terminal stops sending": "data. The terminal starts sending data again when it receives an XON, or when\na clear comm operation is performed."
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "7",
                    "3",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "37",
                    "33",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "7",
                    "3",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "37",
                    "33",
                    "6C"
                ]
            ]
        ],
        "default": "Unlimited",
        "short": "Applications can control the transmit rate limiting feature through the\nDECXRLM control function.",
        "description": ""
    },
    {
        "code": "DL",
        "name": "Delete Line",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "M"
                ],
                [
                    "9B",
                    "3n",
                    "4D"
                ]
            ]
        ],
        "default": null,
        "short": "This control function deletes one or more lines in the scrolling region, starting\nwith the line that has the cursor.",
        "description": "As lines are deleted, lines below the cursor and in the scrolling region move up.\nThe terminal adds blank lines with no visual character attributes at the bottom\nof the scrolling region. If Pn is greater than the number of lines remaining on the\npage, DL deletes only the remaining lines. DL has no effect outside the scrolling\nmargins."
    },
    {
        "code": "DSR",
        "name": "Cursor Position Report (CPR)",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks the terminal for a cursor position report.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Data Integrity Report",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks for the status of the data integrity flag. The data integrity flag\nindicates the integrity of the data flow between the terminal and host. This flag\nis reset each time the terminal sends a data integrity report.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Device Status Reports",
        "parameters": {
            "Ps": "indicates the type of DSR requested. See the following individual DSR reports for\nspecific parameters within each report."
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "n"
                ],
                [
                    "9B",
                    "3n",
                    "6E"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "Ps",
                    "n"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "6E"
                ]
            ]
        ],
        "default": null,
        "short": "The host computer and terminal exchange DSR sequences to provide the host\nwith the operating status of the following features:",
        "description": "There is a different DSR request for each feature. The following sections describe\nthe possible DSR reports. If the terminal is in printer controller mode, then\nthe printer receives the DSR request. The printer can respond through the\nbidirectional printer port."
    },
    {
        "code": "DSR",
        "name": "Extended Cursor Position Report (DECXCPR)",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks the terminal for the current cursor position, including the current\npage number.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Keyboard",
        "parameters": {
            "Pst": "indicates the keyboard status."
        },
        "format": [],
        "default": null,
        "short": "The host asks for the current keyboard language, operating status, and type.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Macro Space Report",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks for the available macro space in the form of a macro space report\n(DECMSR).",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Memory Checksum (DECCKSR)",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks for a memory checksum report of current text macro definitions.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Operating Status",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host requests the terminal's operating status.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "Printer Port",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks for the status of the terminal's printer.",
        "description": ""
    },
    {
        "code": "DSR",
        "name": "User-Defined Keys (VT Level 4 Only)",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "The host asks if the user-defined keys (UDKs) are locked or unlocked.",
        "description": ""
    },
    {
        "code": "ECH",
        "name": "Erase Character",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "X"
                ],
                [
                    "9B",
                    "3n",
                    "58"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases one or more characters, from the cursor position to\nthe right. ECH clears character attributes from erased character positions. ECH\nworks inside or outside the scrolling margins.",
        "description": ""
    },
    {
        "code": "ED",
        "name": "Erase in Display",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "J"
                ],
                [
                    "9B",
                    "3n",
                    "4A"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases characters from part or all of the display. When you\nerase complete lines, they become single-height, single-width lines, with all visual\ncharacter attributes cleared. ED works inside or outside the scrolling margins.",
        "description": ""
    },
    {
        "code": "EL",
        "name": "Erase in Line",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "K"
                ],
                [
                    "9B",
                    "3n",
                    "4B"
                ]
            ]
        ],
        "default": null,
        "short": "This control function erases characters on the line that has the cursor. EL clears\nall character attributes from erased character positions. EL works inside or\noutside the scrolling margins.",
        "description": ""
    },
    {
        "code": "HPA",
        "name": "Horizontal Position Absolute",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "`"
                ],
                [
                    "9B",
                    "3n",
                    "60"
                ]
            ]
        ],
        "default": null,
        "short": "Inquire as to the amount of free memory for programmable key operations.",
        "description": "HPA causes the active position to be moved to the n-th horizontal position of\nthe active line. If an attempt is made to move the active position past the last\nposition on the line, then the active position stops at the last position on the line."
    },
    {
        "code": "HPR",
        "name": "Horizontal Position Relative",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "a"
                ],
                [
                    "9B",
                    "3n",
                    "61"
                ]
            ]
        ],
        "default": null,
        "short": "Inquire as to the amount of free memory for programmable key operations.",
        "description": "HPR causes the active position to be moved to the n-th following horizontal\nposition of the active line. If an attempt is made to move the active position past\nthe last position on the line, then the active position stops at the last position on\nthe line."
    },
    {
        "code": "HTS",
        "name": "Horizontal Tab Set",
        "parameters": {},
        "format": [
            [
                [
                    "HTS"
                ],
                [
                    "88"
                ]
            ],
            [
                [
                    "ESC",
                    "H"
                ],
                [
                    "1B",
                    "48"
                ]
            ]
        ],
        "default": null,
        "short": "HTS sets a horizontal tab stop at the column position indicated by the value of\nthe active column when the terminal receives an HTS.",
        "description": "Executing an HTS does not effect the other horizontal tab stop settings."
    },
    {
        "code": "HVP",
        "name": "Horizontal and Vertical Position",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "f"
                ],
                [
                    "9B",
                    "66"
                ]
            ],
            [
                [
                    "CSI",
                    "Pl",
                    ";",
                    "Pc",
                    "f"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "66"
                ]
            ]
        ],
        "default": null,
        "short": "This control function works the same as the cursor position (CUP) function. New\napplications should use CUP instead of HVP. HVP is provided for compatibility\nwith earlier VT products.",
        "description": ""
    },
    {
        "code": "ICH",
        "name": "Insert Character",
        "parameters": {
            "Pn": "is the number of characters to insert.\nDefault: Pn = 1."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "@"
                ],
                [
                    "9B",
                    "3n",
                    "40"
                ]
            ]
        ],
        "default": null,
        "short": "This control function inserts one or more space (SP) characters starting at the\ncursor position.",
        "description": "The ICH sequence inserts Pn blank characters with the normal character\nattribute. The cursor remains at the beginning of the blank characters. Text\nbetween the cursor and right margin moves to the right. Characters scrolled past\nthe right margin are lost. ICH has no effect outside the scrolling margins."
    },
    {
        "code": "IL",
        "name": "Insert Line",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "L"
                ],
                [
                    "9B",
                    "3n",
                    "4C"
                ]
            ]
        ],
        "default": null,
        "short": "This control function inserts one or more blank lines, starting at the cursor.",
        "description": "As lines are inserted, lines below the cursor and in the scrolling region move\ndown. Lines scrolled off the page are lost. IL has no effect outside the page\nmargins."
    },
    {
        "code": "IND",
        "name": "Index",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "D"
                ],
                [
                    "1B",
                    "44"
                ]
            ]
        ],
        "default": null,
        "short": "IND moves the cursor down one line in the same column. If the cursor is at the\nbottom margin, then the screen performs a scroll-up.",
        "description": ""
    },
    {
        "code": "IRM",
        "name": "Insert/Replace Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "4",
                    "h"
                ],
                [
                    "9B",
                    "34",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "4",
                    "l"
                ],
                [
                    "9B",
                    "34",
                    "6C"
                ]
            ]
        ],
        "default": "Replace",
        "short": "This control function selects how the terminal adds characters to page memory.\nThe terminal always adds new characters at the cursor position.",
        "description": "If IRM mode is set, then new characters move characters in page memory to the\nright. Characters moved past the page's right border are lost.\n\nIf IRM mode is reset, then new characters replace the character at the cursor\nposition."
    },
    {
        "code": "KAM",
        "name": "Keyboard Action Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "2",
                    "h"
                ],
                [
                    "9B",
                    "32",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "2",
                    "l"
                ],
                [
                    "9B",
                    "32",
                    "6C"
                ]
            ]
        ],
        "default": "Unlocked",
        "short": "This control function locks or unlocks the keyboard.",
        "description": "If KAM is set, then the keyboard cannot send characters to the host. The Wait\nindicator appears on the keyboard indicator line at the bottom of the screen. The\nterminal ignores all keystrokes that send characters to the host. KAM does not\naffect the F3 (Set-Up) or F4 (Session) keys.\n\nIf KAM is reset, then the terminal unlocks the keyboard. The keyboard can send\ncharacters to the host."
    },
    {
        "code": "LNM",
        "name": "Line Feed/New Line Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "2",
                    "0",
                    "h"
                ],
                [
                    "9B",
                    "32",
                    "30",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "2",
                    "0",
                    "l"
                ],
                [
                    "9B",
                    "32",
                    "30",
                    "6C"
                ]
            ]
        ],
        "default": "Line feed",
        "short": "This control function selects the characters sent to the host when you press the\n",
        "description": "If LNM is set, then the cursor moves to the first column on the next line when\nthe terminal receives an LF, FF, or VT character. When you press Return, the\nterminal sends both a carriage return (CR) and line feed (LF).\n\nIf LNM is reset, then the cursor moves to the current column on the next line\nwhen the terminal receives an LF, FF, or VT character. When you press Return,\nthe terminal sends only a carriage return (CR) character.\n\nNote on LNM\n\nWhen the auxiliary keypad is in keypad numeric mode (DECKPNM), the Enter\nkey sends the same characters as the Return key."
    },
    {
        "code": "LS",
        "name": "Locking Shift",
        "parameters": {},
        "format": [],
        "default": null,
        "short": "When you use a locking shift, the character set remains in GL or GR until you\nuse another locking shift. ",
        "description": ""
    },
    {
        "code": "MC",
        "name": "Media Copy",
        "parameters": {
            "Pn (VT mode)": "indicates the following VT mode print functions:"
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "i"
                ],
                [
                    "9B",
                    "3n",
                    "69"
                ]
            ],
            [
                [
                    "CSI",
                    "?",
                    "Pn",
                    "i"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "69"
                ]
            ]
        ],
        "default": null,
        "short": "MC is the control sequence that enables the terminal to control all print\nfunctions. There are two variations\u2014ANSI standard and VT mode.",
        "description": ""
    },
    {
        "code": "NEL",
        "name": "Next Line",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "E"
                ],
                [
                    "1B",
                    "45"
                ]
            ]
        ],
        "default": null,
        "short": "Moves cursor to first position on next line. If cursor is at bottom margin, then\nscreen performs a scroll-up.",
        "description": ""
    },
    {
        "code": "NP",
        "name": "Next Page",
        "parameters": {
            "Pn": "indicates how many pages to move the cursor forward.\nDefault: Pn = 0."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "U"
                ],
                [
                    "9B",
                    "3n",
                    "55"
                ]
            ]
        ],
        "default": "Move to the next page",
        "short": "This control function moves the cursor forward to the home position on one of\nthe following pages in page memory. If there is only one page, then the terminal\nignores NP.",
        "description": ""
    },
    {
        "code": "PPA",
        "name": "Page Position Absolute",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "SP",
                    "P"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "50"
                ]
            ]
        ],
        "default": "Move to page 1",
        "short": "This control function can move the cursor to the corresponding row and column\non any page in page memory. You select the page by its number. If there is only\none page, then the terminal ignores PPA.",
        "description": ""
    },
    {
        "code": "PPB",
        "name": "Page Position Backward",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "SP",
                    "R"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "52"
                ]
            ]
        ],
        "default": "Move backward one page",
        "short": "This control function moves the cursor backward to the corresponding row and\ncolumn on one of the preceding pages in page memory. If there is only one page,\nthen the terminal ignores PPB.",
        "description": ""
    },
    {
        "code": "PPR",
        "name": "Page Position Relative",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "SP",
                    "Q"
                ],
                [
                    "9B",
                    "3n",
                    "20",
                    "51"
                ]
            ]
        ],
        "default": "Move to the next page",
        "short": "This control function moves the cursor forward to the corresponding row and\ncolumn on one of the following pages in page memory. If there is only one page,\nthen the terminal ignores PPR.",
        "description": ""
    },
    {
        "code": "PP",
        "name": "Preceding Page",
        "parameters": {
            "Pn": "indicates how many pages to move the cursor backward.\nDefault: Pn = 0."
        },
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "V"
                ],
                [
                    "9B",
                    "3n",
                    "56"
                ]
            ]
        ],
        "default": "Move to the preceding page",
        "short": "This control function moves the cursor backward to the home position on one of\nthe preceding pages in page memory. If there is only one page, then the terminal\nignores PP.",
        "description": ""
    },
    {
        "code": "RIS",
        "name": "Reset to Initial State",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "c"
                ],
                [
                    "1B",
                    "63"
                ]
            ]
        ],
        "default": null,
        "short": "This control function causes a nonvolatile memory (NVR) recall to occur. RIS\nreplaces all set-up features with their saved settings.",
        "description": ""
    },
    {
        "code": "RM",
        "name": "Reset Mode",
        "parameters": {
            "0": "DEC Modes",
            "2": "CSI ? 34; 36 l",
            "The following sequence resets (Hebrew) keyboard mapping (DECHEBM) and": "Hebrew encoding mode (DECHEM):",
            "34 indicates (Hebrew) keyboard mapping.": "36 indicates Hebrew encoding mode."
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "Pd",
                    ";",
                    "...",
                    ";",
                    "Pd",
                    "l"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "3B",
                    "...",
                    "3B",
                    "3n",
                    "6C"
                ]
            ]
        ],
        "default": null,
        "short": "There are two formats of this control function. You use the ANSI format to reset\none or more ANSI modes. You use the DEC format to reset one or more DEC\nmodes. You cannot reset ANSI and DEC modes with the same RM sequence.",
        "description": ""
    },
    {
        "code": "S7C1T",
        "name": "Send C1 Control Character to the Host",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "SP",
                    "F"
                ],
                [
                    "1B",
                    "20",
                    "47"
                ]
            ]
        ],
        "default": null,
        "short": "The VT510 can send C1 control characters to the host as single 8-bit characters\nor as 7-bit escape sequences. You should select the format that matches the\noperating level you are using.",
        "description": "This sequence changes the terminal mode as follows:\n\n\n\n\n\n\nMode Before\nMode After\n\n\n\n\nVT Level 4 mode, 8-bit controls\nVT Level 4 mode, 7-bit controls.\n\n\nVT Level 4 mode, 7-bit controls\nSame. Terminal ignores sequence.\n\n\nVT Level 1 or VT52 mode, 7-bit controls\nSame. Terminal ignores sequence.\n\n\n"
    },
    {
        "code": "S8C1T",
        "name": "Send C1 Control Character to the Host",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "SP",
                    "G"
                ],
                [
                    "1B",
                    "20",
                    "46"
                ]
            ]
        ],
        "default": null,
        "short": "The following sequence causes the terminal to send C1 control characters to the\nhost as single 8-bit characters:",
        "description": "This sequence changes the terminal mode as follows:\n\n\n\n\n\n\nMode Before\nMode After\n\n\n\n\nVT Level 4 mode, 8-bit controls\nSame. Terminal ignores sequence.\n\n\nVT Level 4 mode, 7-bit controls\nVT Level 4 mode, 8-bit controls.\n\n\nVT Level 1 mode\nSame. Terminal ignores sequence.\n\n\n"
    },
    {
        "code": "SCODFK",
        "name": "Define Function Key",
        "parameters": {
            "The first character after the ASCII character representing a function key becomes": "the delimiter. It looks for an identical character as the second and final delimiter.\nIf string is too long and no memory is available, then the command string\nis aborted and remaining characters are displayed on screen. The character\nbecomes the final character. All the following characters are displayed on the\nscreen.",
            "2": "Example:",
            "A \"^\" character causes any following character to subtract 32 from its ASCII": "value. For example, \"^e\" in the string sends \"E\" when the key is pressed.",
            "String": "is the programmed key definition which is enveloped by two characters as the\ndelimiters.",
            "If you execute the same sequence when only a 4 byte string is allowed, then the": "whole sequence is aborted.",
            "For example, executing ESCQ0'F1KEY' defines string F1KEY for function key F1;": "ESC1aF2KEYa defines string F2key for F2.",
            "Any code in the 00-7F region can be defined. An 8-bit code entered is stripped of": "its eighth bit and defined as a corresponding 7-bit code."
        },
        "format": [
            [
                [
                    "ESC",
                    "Q",
                    "Fn",
                    "string"
                ],
                [
                    "1B",
                    "51",
                    "...",
                    "..."
                ]
            ]
        ],
        "default": null,
        "short": "Programs function key to send a defined string in SCO Console mode.",
        "description": "The first character after the ASCII character representing a function key becomes\nthe delimiter. It looks for an identical character as the second and final delimiter.\nIf string is too long and no memory is available, then the command string\nis aborted and remaining characters are displayed on screen. The character\nbecomes the final character. All the following characters are displayed on the\nscreen.\n\nExample:\n\nExecuting \"ESC Q 0 'abcdefghij'klmnopq\" when 100 bytes of memory is\navailable defines the string \"abcdefghij\" into F1 function key and displays\n\"klmnopq\" on the screen.\n\nIf you execute the same sequence when only a 4 byte string is allowed, then the\nwhole sequence is aborted.\n\nA \"^\" character causes any following character to subtract 32 from its ASCII\nvalue. For example, \"^e\" in the string sends \"E\" when the key is pressed.\n\nAny code in the 00-7F region can be defined. An 8-bit code entered is stripped of\nits eighth bit and defined as a corresponding 7-bit code.\n\nFor example, executing ESCQ0'F1KEY' defines string F1KEY for function key F1;\nESC1aF2KEYa defines string F2key for F2.\n\nThe maximum string length for a defined key is 255 characters."
    },
    {
        "code": "SCORC",
        "name": "Restore Saved Cursor Position",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "u"
                ],
                [
                    "9B",
                    "75"
                ]
            ]
        ],
        "default": null,
        "short": "Moves cursor to the position saved by save cursor command in SCO console mode.",
        "description": "This command acts the same as the DECRC command, except that the cursor\nstays at the same page instead of moving to a page where the cursor was saved."
    },
    {
        "code": "SCOSC",
        "name": "Save Current Cursor Position",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "s"
                ],
                [
                    "9B",
                    "73"
                ]
            ]
        ],
        "default": null,
        "short": "Saves current cursor position for SCO console mode.",
        "description": "This command acts the same as the DECSC command, except that the page\nnumber where the cursor is located is not saved as a result of executing the\ncommand."
    },
    {
        "code": "SCS",
        "name": "Select Character Set",
        "parameters": {},
        "format": [
            [
                [
                    "ESC",
                    "I",
                    "Dscs"
                ],
                [
                    "1B",
                    "...",
                    "..."
                ]
            ]
        ],
        "default": null,
        "short": "Designate character sets to G-sets.",
        "description": ""
    },
    {
        "code": "SD",
        "name": "Pan Up",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "T"
                ],
                [
                    "9B",
                    "3n",
                    "54"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the user window up a specified number of lines in\npage memory.",
        "description": ""
    },
    {
        "code": "SGR",
        "name": "Select Graphic Rendition",
        "parameters": {
            "Ps": "is a number representing a certain visual attribute. You can use more than one\nPs value to select different character attributes. Table 5&#8211;16 lists Ps values and\nthe attributes they select.",
            "The ASCII character set with control codes residing in Hex 00 to 1F region is": "the default 7-bit display character set. This is true regardless of the ISO/ANSI\nor PC character set. When in an ISO/ANSI character set, issuing \"CSI 10 m\" is\nequivalent to \"designating and invoking ASCII to G0 and GL.\"",
            "3": "CSI 0 ; 1 ; 5 ; 4 m",
            "4": "The following sequence displays the negative image of text:",
            "5": "CSI 7 m",
            "1": "Default: Ps = 0 (clears all attributes).",
            "Command \"ESC 12 m\" toggles the high bit of the current 8-bit character set. All": "the characters in Hex 80-FF region can be displayed as 7-bit codes except 9B\n(ESC) and 91(DC1), 93(DC3) when XON/XOFF is enabled. After the command is\nexecuted, 1B is executed as an ESC. Hex 11 and 13 can be displayed only when\nXON/XOFF is disabled.",
            "When \"ESC 11 m\" is executed, the display character set is loaded with codes in": "the Hex 00 to 7F region of a PC character set. PC characters whose code values\nare less than 1F can be displayed through this sequence except 1B (ESC) and\n11(DC1), 13(DC3) when XON/XOFF is enabled. 1B is always executed as an\nESC to allow the application to execute the command to go back to the default\ncharacter set. Hex 11 and 13 can be displayed only when XON/XOFF is disabled.\nThis command does not work when the ISO/ANSI character set is selected.",
            "Commands \"CSI 10-12 m\" affect only the Hex 00-7F portion of the display": "character set. The hex 80-FF region of the display character set is left intact.",
            "When you select more than one attribute in an SGR sequence, then they are": "executed in order. For example, you can use the following sequence to display\ntext that is bold, blinking, and underlined:"
        },
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    ";",
                    "Ps",
                    "...",
                    "m"
                ],
                [
                    "9B",
                    "3n",
                    "3B",
                    "3n",
                    "...",
                    "6D"
                ]
            ]
        ],
        "default": "Clear all attributes",
        "short": "This control function selects one or more character attributes at the same time.",
        "description": ""
    },
    {
        "code": "SM",
        "name": "Set Mode",
        "parameters": {
            "0": "DEC Modes",
            "The following sequence sets (Hebrew) keyboard mapping (DECHEBM) and": "Hebrew encoding mode (DECHEM):",
            "34 indicates (Hebrew) keyboard mapping.": "36 indicates Hebrew encoding mode.",
            "2": "CSI ? 34; 36 h"
        },
        "format": [
            [
                [
                    "CSI",
                    "?",
                    "Pd",
                    ";",
                    "...",
                    "Pd",
                    "h"
                ],
                [
                    "9B",
                    "3F",
                    "3n",
                    "3B",
                    "...",
                    "3n",
                    "68"
                ]
            ]
        ],
        "default": null,
        "short": "This control function has two formats. You use the ANSI format to set one or\nmore ANSI modes. You use the DEC format to set one or more DEC modes. You\n",
        "description": ""
    },
    {
        "code": "SRM",
        "name": "Local Echo: Send/Receive Mode",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "1",
                    "2",
                    "h"
                ],
                [
                    "9B",
                    "31",
                    "32",
                    "68"
                ]
            ],
            [
                [
                    "CSI",
                    "1",
                    "2",
                    "l"
                ],
                [
                    "9B",
                    "31",
                    "32",
                    "6C"
                ]
            ]
        ],
        "default": "No local echo",
        "short": "This control function turns local echo on or off. When local echo is on, the\nterminal sends keyboard characters to the screen. The host does not have to send\n(echo) the characters back to the terminal display. When local echo is off, the\nterminal only sends characters to the host. It is up to the host to echo characters\nback to the screen.",
        "description": "When the SRM function is set, the terminal sends keyboard characters to the\nhost only. The host can echo the characters back to the screen.\n\nWhen the SRM function is reset, the terminal sends keyboard characters to\nthe host and to the screen. The host does have to echo characters back to the\nterminal."
    },
    {
        "code": "SS",
        "name": "Single Shifts",
        "parameters": {
            "Suppose the ASCII character set is in GL. You want to display the alpha": "character from the DEC Technical character set, already designated as G3.\nYou do not want to replace the ASCII set just to display one character. Instead,\nyou can use single shift 3 to temporarily map the DEC Technical set (G3) into GL."
        },
        "format": [],
        "default": null,
        "short": "You use a single shift when you want to display the next character from a\ndifferent character set. A single shift maps the G2 or G3 set into GL. The\ncharacter set is active for only one character, then the terminal returns to the\nprevious character set in GL.",
        "description": ""
    },
    {
        "code": "SU",
        "name": "Pan Down",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "S"
                ],
                [
                    "9B",
                    "3n",
                    "53"
                ]
            ]
        ],
        "default": null,
        "short": "This control function moves the user window down a specified number of lines in\npage memory.",
        "description": ""
    },
    {
        "code": "TBC",
        "name": "Tab Clear",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Ps",
                    "g"
                ],
                [
                    "9B",
                    "3n",
                    "67"
                ]
            ]
        ],
        "default": null,
        "short": "This control function clears tab stops.",
        "description": ""
    },
    {
        "code": "VPA",
        "name": "Vertical Line Position Absolute",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "d"
                ],
                [
                    "9B",
                    "3n",
                    "64"
                ]
            ]
        ],
        "default": null,
        "short": "VPA inquires as to the amount of free memory for programmable key operations.",
        "description": "VPA causes the active position to be moved to the corresponding horizontal\nposition.\n\nThe default value is 1.\n\nMove cursor to line Pn. VPA causes the active position to be moved to the\ncorresponding horizontal position at vertical position Pn. If an attempt is made to\nmove the active position below the last line, then the active position stops on the\nlast line."
    },
    {
        "code": "VPR",
        "name": "Vertical Position Relative",
        "parameters": {},
        "format": [
            [
                [
                    "CSI",
                    "Pn",
                    "e"
                ],
                [
                    "9B",
                    "3n",
                    "65"
                ]
            ]
        ],
        "default": null,
        "short": "VPR inquires as to the amount of free memory for programmable key operations.",
        "description": "VPR causes the active position to be moved to the corresponding horizontal\nposition.\n\nThis command causes the active position to be moved to the corresponding\nhorizontal position at n-th following vertical position. If an attempt is made to\nmove the active position below the last line, the active position stops at the last\nline."
    }
]
